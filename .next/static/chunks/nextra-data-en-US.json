{"/404":{"title":"Error 400","data":{"":"","sorry-404-not-found#Sorry, 404 Not Found":"We have moved a LOT of things while combining all of our old guides.\nTry the main page --> here."}},"/500":{"title":"Error 500","data":{"":"","sorry-500-internal-server-error#Sorry, 500 Internal Server Error":"We have moved a LOT of things while combining all of our old guides.\nTry the main page here."}},"/about":{"title":"About","data":{"":"","about-us#About Us":"Our company is a blockchain proof of stake validator that specializes in helping investors become validators and start earning universal basic income. We believe that the proof of stake consensus mechanism is the future of decentralized, trustless networks and we want to empower individuals to take part in this exciting new technology.Our team has extensive experience in the proof of stake space and we are committed to providing our clients with the support and guidance they need to successfully navigate the world of validating and earning universal basic income. Whether you are new to the space or an experienced investor, we can help you achieve your goals and join the growing community of proof of stake validators.EasyNode.PRO originally started as the validator Slugom Crypto in March 2021. We started validating in March '21 and just going through docs.harmony.one we knew there had to be an easier way for validators to get started with Harmony ONE Protocol. We've since released many tools for Validators and Delegators from multiple blockchains to utilize.","our-software#Our Software":"Welcome to an introduction to Easy Node Community - Harmony ONE Validators & Vault Operators, Findora FRA Validators, NEWRL Validator, Presearch Node Operator & Software DevelopersEasy Node is a longtime Linux house using it as a daily desktop for many years before being a Linux Systems Administrator full time for the last 15+ years.","our-guides#Our Guides":"We first added to the community by producing a living guide to use before/during/after installing the Harmony Validator Software.After it was created we realized that most of the things you need to know to setup a validator no longer matter once you're online and operational but it's great knowledge to have in your bag when issues arise. Sure, there's certain tasks you'll need to do as an administrator but perhaps we can provide some tools to automate most of those which is why we started making the python application Harmony Validator Toolbox in July '21.","validators-toolbox--easy-node-installer-applications#Validator's Toolbox & Easy Node Installer Applications":"In early July 2021 we started coding a menu application to help us manage our own nodes. This idea quickly spread to an application that could be used by anyone to manage their Regular Validator Signing Server Node. This guide covers this tool.Once the idea was proposed we were approached with the idea of making it beginner friendly as well as an option for people who simply need to run a \"Full Node\" on the Harmony blockchain without signing blocks (developer and application use).","open-source#Open Source":"Our documentation website and Validator Toolbox applications are all open source. You can make upgrade and submit them as merges on our github repo pages."}},"/admin":{"title":"Administrator Tools","data":{"":"Here's some helpful free tools you can setup to use to work with your nodes before you get started.","user-account#User Account":"We suggest setting up a user account and giving it access to the sudo (root) group. You will want to log in as this account to run all commands unless otherwise specified.In this guide we will create & use the account serviceuser but feel free to customize the username to your liking:\nadduser serviceuser\nSet a password, you can skip filling out the user info by pressing enter to leave it blank, confirm creation of new account. Then add permissions:\nsudo usermod -aG sudo serviceuser\nNow you can disconnect and reconnect as the newly created serivceuser account.","ssh-keys#SSH Keys":"Now that you've got a regular user account with root access, the first key to easier administration is getting a public and private SSH key files. Here's how to generate those and please note if you re-run this with the same default options you will overwrite your existing keys.","generate-key-pairs#Generate Key Pairs":"Run the following code in terminal or powershell on your pc to generate your keys:\n\n\nssh-keygen -t rsa -b 4096\nWhere:\n-t stands for type. The above command generates an RSA type keypair. RSA is the default type.\n-b stands for bits. By default the key is 3072 bits long. We use a 4096 bits key for stronger security.\nThe first prompt will ask you for the file name, just press enter to save in the default location if you have no other keys or pick a name. Your public file will be saved in the same spot but with .pub as an extension (For example id_rsa.pub with default name of id_rsa on private key)\nThe second prompt will be for a password. You can set a password here for security or leave it empty so you don't have to input a password when connecting via SSH with this key pair.\n\nWhen asked which file to save the key, you can simply press Enter to use the default file. Next, enter a good passphrase at least 20 characters long. The passphrase is used to encrypt the private key.\nThe private key (your identification) will be save in the .ssh/id_rsa file under your home directory.\nThe public key will be save in the .ssh/id_rsa.pub file.\n\n\n\nFrom the randomart image we can see the length of the key (RSA 4096). Now run the following commands:\n\n\nfile ~/.ssh/id_rsa\nfile ~/.ssh/id_rsa.pub\nYou should see the output above on the randomart image showing \"OpenSSH private key\" & \"OpenSSH RSA public key\".If you see the “No such file or directory” error, that means the SSH keypair isn’t created. Run the ssh-keygen -t rsa -b 4096 command to create it again.You now have a private and public keypair in your home directory .ssh folder named id_rsa & id_rsa.pub\nid_rsa - Keep this private, this is used on your workstation to unlock servers. Keep a copy of it or you may lose access to your servers.\nid_rsa.pub - This file will be used on your server provider host (or home linux server) to connect to the server with just the id_rsa key.","add-keys-to-server#Add Keys to Server":"","deploy-a-server-with-keys#Deploy a server with keys":"On all server hosts, there will be a spot to input your private key on your account. Then when you create a new server you can apply the key to root so you can connect to root@[IP_ADDREESS] when the server is live. Most providers offer a service called \"cloud-init\" which allows you to run code as they deploy your server. Check out our Power Users guide for more info!","add-key-to-existing-server#Add key to existing server":"To add your keys to an existing server use your terminal and run the following code to upload your id_rsa.pub file customizing the user_name and IP_ADDRESS:\nssh-copy-id user_name@[IP_ADDRESS]\nThe public key gets put into the remote user_name's ~/.ssh/authorized_keys file. You can also create this file by hand just be sure to set the permissions on ~/.ssh to 700 and ~/authorized_keys to 600 for safety.","using-ssh-natively-to-connect#Using ssh natively to connect":"You can now use your local terminal or powershell to ssh into your server instantly. Just run the following code:\nssh user_name@[IP_ADDRESS]\nIf that's now working to connect you can now use ssh to connect remotely & scp/rclone to transfer files from your home workstation to your server without even logging into it via ssh. We do suggest reading about Termius though as it's much more convienent overall for utilizing your server.","security#Security":"Here's a few quick security tips that you can use to lock down your server and make it even more secure.","disable-ping-response#Disable Ping Response":"You can disable ping responses sent to your server by running the following, re-run it with 0 instead of 1 at the end to re-enable:\nsudo sysctl -w net.ipv4.icmp_echo_ignore_all=1","change-ssh-port-disable-password--root-logins#Change SSH Port, Disable Password & Root Logins":"You can change your ssh port from 22 to a new port for extra security along with locking it down to your home/work IP addresss to go the extra mile. To change the SSH port, Password Usage, and Root Account Login run the following command to open sshd_config in nano:\nsudo nano /etc/ssh/sshd_config\nOnce your file is open, change the following options. You can change port 22 to another port here, just note the port to update your firewall rules.\n# Change the following lines to update SSH port & disable password usage to login. Remove the # from the start of each line if it exists and update the option at the end of each line to your prefereences:\nPort 22\nPasswordAuthentication no\nChallengeResponseAuthentication no\n\n# To disable the root account entirely change:\nPermitRootLogin no\nAfter you've updated the files you'll still need to commit the changes by running:\nsudo systemctl restart sshd\nYour current terminal connection will remain live on the current port until you disconnect, please keep it open and remember you most likely need to edit/update a firewall rule for the new port.","update-firewall#Update Firewall":"Update your firewall to change port 22 to the new port # you chose at this point. Here's a reminder on our Harmony & Findora firewall notes. Sub your new port for 22 in the guides.This is also a good time to set the new port to only allow your home/work IPs for extra security. Get your IP by visiting whatismyip.com.","web-host-firewalls#Web Host Firewalls":"Simply update the rule for port 22 to match the port number you used in your configuration above.","ufw-firewall-users#ufw Firewall Users":"If you're not using a web firewall and are using ufw. Update our example port of 5022 to match the port you used in your configuration. Here's the updates to run for ufw:","standard-config#Standard Config":"sudo ufw allow 5022\nsudo ufw delete allow 22","locked-ip-config#Locked IP Config":"If you'd only like to allow from a specific IP address to your new port, run the following inserting your IP & Port:\nsudo ufw allow from 203.0.7.10 proto tcp to any port 5022\nsudo ufw delete allow 22","reload-ufw#Reload UFW":"At this point you'll need to reload ufw and your new port will become active.\nsudo ufw reload","fail2ban#Fail2Ban":"If you'd like to go the extra mile you can also implement Fail2Ban on the SSH port. Fail2Ban will lock out any IP address that attempts and fails to login more than the maxretry you configure for the port or service.Here's a guide on how to install and enable it for SSH and a few other services but we'll give you the install and config for SSH here.","how-to-install-fail2ban#How to Install Fail2Ban":"By default, Fail2Ban is installed in the Webdock LAMP/LEMP stack. If not installed you can install it using the following command:\nsudo apt install fail2ban -y\nOnce Fail2Ban is installed, you can check the status of Fail2Ban with the following command:\nsudo systemctl status fail2ban\nYour service may be inactive still at this point, here's an example of possible outputs. We still need to configure which services so it's ok if it's not running at this time.Offline:\n○ fail2ban.service - Fail2Ban Service\nLoaded: loaded (/lib/systemd/system/fail2ban.service; disabled; vendor preset: enabled)\nActive: inactive (dead)\nDocs: man:fail2ban(1)\nOnline:\n● fail2ban.service - Fail2Ban Service\nLoaded: loaded (/lib/systemd/system/fail2ban.service; enabled; vendor preset: enabled)\nActive: active (running) since Mon 2021-05-24 12:08:07 UTC; 3min 5s ago\nDocs: man:fail2ban(1)\nMain PID: 341 (f2b/server)\nTasks: 7 (limit: 464145)\nMemory: 14.6M\nCGroup: /system.slice/fail2ban.service\n└─341 /usr/bin/python3 /usr/bin/fail2ban-server -xf start\n\nMay 24 12:08:07 ubuntu systemd[1]: Starting Fail2Ban Service...\nMay 24 12:08:07 ubuntu systemd[1]: Started Fail2Ban Service.\nMay 24 12:08:08 ubuntu fail2ban-server[341]: Server ready","configure-fail2ban-for-ssh#Configure Fail2Ban for SSH":"On Ubuntu Fail2Ban for SSH should automatically be enabled once you install Fail2Ban, but you can check if it is indeed enabled in the main jail.conf file or by checking the jail status with the CLI tool as shown in the sections below.To manually configure Fail2Ban for SSH, you will need to create a jail.local file:\nsudo nano /etc/fail2ban/jail.d/sshd.conf\nAdd the following lines:\n[sshd]\nenabled = true\nport = ssh\nfilter = sshd\nlogpath = /var/log/auth.log\nmaxretry = 3\nbantime = 120\nignoreip = whitelist-IP\nSave and close the file when you are finished then restart the Fail2Ban service to apply the changes.\nsudo systemctl restart fail2ban\nThe above configuration will block the remote IPs after three failed attempts to log in to your server via SSH. The remote host's IP will be blocked for 120 seconds.","termius#Termius":"Termius is currently the tool of choice for any server administrators. You can import connections from any previously used apps to help configure profiles and hosts. It has built in SFTP file transfer and if you go premium it will sync to any device you log into termius on (including your mobile device). Get started with this guide by their team:\nQuick Start Guide - Termius has a great guide that covers it all. Get familiar with Hosts, SFTP and Snippets.","snippets#Snippets":"Snippets are shortcuts in termius that you can run with 1 click. Here's some of our favorites:\n\nTo launch Harmony Toolbox with the latest updates and return you to the ~/harmony folder when you exit, make the snippet:\ncd ~/harmony-toolbox && git pull && pip3 install -r requirements.txt --quiet && cd ~/harmony && python3 ~/harmony-toolbox/src/menu.py\n\n\nTo show your stats with our script without opening the Harmony Toolbox, make the snippet:\npython3 ~/harmony-toolbox/src/multi_stats.py\n\n\nTo launch Findora Toolbox with the latest updates and return you to the user home folder when you exit, make the snippet:\ncd ~/findora-toolbox/ && git pull && pip3 install -r requirements.txt --quiet && cd ~/ && python3 ~/findora-toolbox/src/app.py","other-ssh-clients#Other SSH Clients":"Consider Termius but there are many other options to connect outside of Termius and your local shell.\nPutty\nMobaXTerm\nTerminal (Mac)\nPowershell (Windows)","sftp-clients#sFTP Clients":"A graphical user interface is great for transferring files. This is built into Termius which is why we suggest it but here are some alternatives.\n\n\nWinSCP - Import connections from putty\nand transfer files with an explorer style interface\n\n\n\n\nFilezilla - Import connections from\nputty and transfer files with an explorer style interface","docker-installation#Docker Installation":"Docker is required to run Findora, so with your new server online and logged in to the user you'll be running the programs as, install docker on your Ubuntu 20.04/22.04LTS system with the following command. If you user isn't servicefindora update that to be your username in the following code before running it on your server:\nsudo apt update -y && sudo apt install apt-transport-https ca-certificates curl software-properties-common -y && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable\" && sudo apt install docker-ce -y && sudo usermod -aG docker servicefindora","reconnect-your-session#Reconnect your session":"Disconnect from your server and reconnect. Verify your user account is in the docker group by running the following code:\ngroups\n\n\nOnce you've verified your user is in the docker group you can continue to the run installer step.","vs-code#VS Code":"Using Microsoft's VS Code editor you can install the \"Remote Developers Extension Pack\" and connect to your server via SSH. Once connected you can open and edit files via their applicaiton GUI.\nNotes here on how to configure your server, user account and IdentityFile in your SSH configuration file for VS Code.","linux-packages#Linux Packages":"Here's our recommendation for additional linux program tools you can load onto your validator nodes:htop - Monitor your cpu, memory, service and application stats. Install if missing on ubuntu with:\nsudo apt install htop -y\nnethogs - Monitor your network stats. Install if missing on ubuntu with:\nsudo apt install nethogs -y","tools--scripts-for-validators#Tools & Scripts for Validators":"Made by us, ⚡ EasyNode.PRO ⚡","harmony-one-scripts#Harmony ONE Scripts":"We have a repository of Harmony Validator Scripts with details on how to use those but consider using the toolbox over these tools, they are no longer maintained and are only community supported at this time.","findora-fra-scripts#Findora FRA Scripts":"We have a repository of Findora Validator Scripts with details on how to use those but consider using the toolbox over these tools going forward. These are still maintained for now.","upgrades#Upgrades":"","validator-toolbox-either-upgrades#Validator Toolbox (either) Upgrades":"As we showed earlier in our snippets for upgrading, run those commands when you launch toolbox to pull the latest, install requirements, and launch the menu.","updating-ubuntu-20042204-lts#Updating Ubuntu 20.04/22.04 LTS":"To run Ubuntu updates run the following command string - This will update your repo, pull in upgrade and dist-upgrades and cleanup any leftover unused packages.\nsudo apt-get update && sudo apt-get upgrade -y && sudo apt-get dist-upgrade -y && sudo apt autoremove -y\nOnce completed you're up to date.","should-we-reboot#Should we reboot?":"The unofficial motto of Linux is Never Reboot, so you probably don't have to unless you want to change Kernels. No need for that at this point if you don't want to upgrade.However, if you'd like to stop your node from signing and reboot you can run the following command to upgrade Ubuntu and restart all in one command.\nsudo apt-get update && sudo apt-get upgrade -y && sudo apt-get dist-upgrade -y && sudo apt autoremove -y && sudo reboot\nServer will automatically restart and you'll need to reconnect any open terminal sessions.Any tmux sessions will also need to be restarted after a reboot."}},"/api-docs":{"title":"API","data":{"":"","apieasynodepro#api.easynode.pro":"API guides coming soon, for now you can read the live docs and test out the calls on api.easynode.pro/api-docs"}},"/findora/docs":{"title":"Toolbox Documents","data":{"":"Here's a deep dive into how the toolbox works currently. If you're looking for the installation instrctuions, those are here.","intro#Intro":"The Findora Validator Toolbox is designed to help Findora validators from start to finish - Installation to daily management operations. It has an Installer and Management Menu.","deep-dive-video#Deep Dive video":"We put together a video taking a deeper look into the validator toolbox.","installer#Installer":"On first run, you will be asked if you'd like to install (fresh server) and then if you want a mainnet or testnet setup. On an existing server it will ask if this server runs mainnet or testnet (will work on auto detect soon!).The installer will pull the installation script and get everything setup. At the end of the installer you'll have a fully working validator syncing up to the blockchain on a brand new tmp.gen.keypair and priv_validator_key.json file. These are usable as wallets but are also disposable still at this point. You can test out all the functions of a Findora server now as long as you don't run the staking and creation commands.The Toolbox will also create the folder ~/findora_backup - Each time you launch it will recheck the files and notify you if it detects any issues.You can do all the testing you'd like at this point and wipe the server with no harm. If you'd like to go live with these keys here's the remaining things that need to be performed after installation:","menu-options#Menu Options":"We're still filling out the menu options, here's a current shot of the options as of 12/15/2022:\n\n\nOption\tFunction\tNotes\t1\tShow 'curl' stats info\tShows output of curl 'http://localhost:26657/status', most info will be moved to front page\t2\tShow 'fn' stats info\tShows output of fn show, most info will be moved to front page\t3\tShow Balance\tComing soon, will be moved to front page\t8\tUpdate Findora Container\tPull latest version, re-create and restart local server container, you may miss blocks\t9\tRun Safety Clean\tRuns the safety_clean script, wipes database, preserves wallet info, full reset of system\t10\tUpdate Operating System\tSafely stops your container before running updates, you may miss blocks\t13\tShow system disk info\tInfo about hard drive space!\t14\tTMI about your Validator\tA validator info dump, coming soon?\t15\tTMI about your Server\tAll of the hardware information on your VPS\t888\tMigrate to this Server\tA hidden option, only enabled if you follow the Moving Servers guide.\t999\tReboot Server\tSafely stop your container & reboot your server. You will miss blocks with this option!\nPlease note, if you launch the toolbox after a reboot we will tell you if your container is down and help you get it back online with the update version script.","backup-key-files#Backup Key Files":"Using the toolbox will copy all the files you need to backup into the folder ~/findora_backup for safe keeping. Transfer this folder home using an sFTP program or command line utility.Here's the list of files in ~/findora_backup and where they reside while being used by the application:\n- tmp.gen.keypair - This file is the same as your network_node.key file (network being mainnet or testnet)\n- config folder - This is a copy of your tendermint/config folder which contains priv_validator_key.json","future-updates#Future Updates":"","better-stats#Better stats":"We will be pulling all stats to the front page. Unlike our other toolbox option 1 and 2 are still useful as we'll only be pulling the juicy bits to the front page. We'll leave options 1/2 as is mostly other that some formatting while moving the good stuff forward to always be available.We will setup the toolbox to auto refresh like our other one does once we have stats pulled forward.","web-frontend#Web frontend":"We've got the framework for a web front end built and we will be working on using python/flask to run a local web server you can use to install/manage/migrate your findora validator, stay tuned!"}},"/findora":{"title":"Findora Validator Guides","data":{"":"","what-is-a-findora-validator#What is a Findora Validator?":"Like most EVM type validators, Findora validators are responsible for processing the blocks. The validator who proposes the block on Findora gets the reward. Here's some differences for those familiar with Harmony ONE:\n21 day unstaking\n0% minimum fee, fees set by individual validators\nSmall slashing fee for each missed block, shared by the entire validator pool\n5% slashing fee on your entire delegation pool for Double Signing\nTop 100 Validators by Total Stake are elected each block and eligible to claim the reward\nOne Validator per block proposes it and gets the reward\nNo minimum staking amounts","how-to-be-a-findora-validator#How to be a Findora Validator?":"Start by having at least 10k Findora in a wallet you control. After reading up on how to run a validator you can rent a VPS (Virutal Private Server) or depending on skill level find an Ubuntu server to run Findora. Once you've setup the software you're in the post installation phase where you'll monitor your server (use vStatsFindoraBot on telegram) and start working to obtain a higher total delegation to earn more rewards.","install-the-easy-node-way#Install The Easy Node Way":"When using our guides or tips you can always assume the following things that aren't really specified in the Harmony Documents. We call this \"The Easy Node Way\" which helps with organization and security:\nSetup a user account to run docker & findora\nDon't use root or findora as account names!!!\nWe suggest your username as something like servicefindora","validator-support-communities#Validator Support Communities":"There is no setup help or support officially provided to validators by the blockchains you are your own help desk. It's always best to fully learn your system before going live on a blockchain. If you do get stuck you can always ask for help in:\nFindora Main Telegram Chat - Findora Validator Support Telegram Channel is the best spot for incoming Findora Validators to as questions. Ask for an invite in the main.\nEasyNode.PRO Discord - We do field questions in our Discord server but we may take our sweet time to respond. Other users may provide assistance if they're available so post in the proper channels!","subscribe-to-easy-node#Subscribe to Easy Node":"Want to help us out for helping you out? Our subscriptons start as low as $3.75 a month!Have a lot of questions? Become an 'Easy Technical Supporter' and unlock a subscribers only priority support chat!Get more info here:\nEasy Node Discord Subscriptions"}},"/findora/moving":{"title":"Notes on Moving Servers","data":{"":"For people looking to move providers or re-create a validator, you'll need to import a few files onto the new server and then be sure to shut off the old server before starting the new server with your old keys to avoid double signing slashing (5% from your pool). The slashing fee for Missing Blocks is far less and easier to explain than getting slashed for 5%.","backup-recovery-data-files#Backup Recovery Data Files":"The Validator Toolbox copies all files you need to backup into the folder ~/findora_backup every time you launch it.To backup your server, save this folder somewhere safe and always keep it private. You will need it for recovery or migrating servers.If you're not using the validator toolbox here's a list of files you'll need to migrate to a new server:\n\n\n~/tmp.gen.keypair\n~/staker_memo\n/data/findora/mainnet/node.mnemonic\n/data/findora/mainnet/mainnet_node.key\n/data/findora/mainnet/tendermint/config/\n\n\n\n~/tmp.gen.keypair\n~/staker_memo\n/data/findora/testnet/node.mnemonic\n/data/findora/testnet/testnet_node.key\n/data/findora/testnet/tendermint/config/","migrate-your-server-via-validator-toolbox#Migrate your server via Validator Toolbox":"To migrate via validator toolbox, use the toolbox to install a brand new node on your new server. Let it fully sync up with the blockchain and now you're ready to use the toolbox to convert this new server over to using your old validator keys and files.We've built a migration tool into the validator toolbox. To activate this feature create a folder named ~/migrate and using your old server files place the tmp.gen.keypair file inside along with a copy of your tendermint/config folder. Your ~/migrate folder should look like this:\n~/migrate/tmp.gen.keypair\n~/migrate/config\nOnce those files are in place you can shut down your old server to avoid double signing as you're ready to flip the new server to your old file and start signing instantly.After shutting down your old server, restart the validator toolbox and you will see option 888 available to migrate your server files to the new validator node.After running it you'll be up and online almost instantly as you let it sync up and keep running without stopping it except for a moment when we change your keys over.","manual-migration-method#Manual Migration Method":"Note: This is the old method, the toolbox works best to migrate efficiently. This guide will assume you have a new server online and synced up to the blockchain on a temporary brand new wallet. You can use the validator toolbox install to get to this point and then take over manually.","on-your-new-server#On your new server":"Assuming you did the standard installation and have findora synced up with the blockchain on a temporary wallet you may proceed.Log into your new server and create the folders we will use for migration in your home directory. Create a folder named migrate with a config folder inside by running the following commands:\ncd ~/\nmkdir -p ~/migrate/config\nUse a transfer app to add your old tmp.gen.keypair, node.mnemonic files into the ~/migrate folder. Add your old config folder into the ~/migrate/config folder.At this point you can shut down your old server and take it offline to avoid double signing.Once your old server is offline - On the new server, download and run our migration script to convert your server over to your old keys and to start syncing again run our new script by running the following code:\n\n\ncd ~/ && wget -O migrate_mainnet.sh https://raw.githubusercontent.com/FindoraNetwork/findora-toolbox/main/src/bin/main/migrate_mainnet.sh && bash -x migrate_mainnet.sh\n\n\n\ncd ~/ && wget -O migrate_testnet.sh https://raw.githubusercontent.com/FindoraNetwork/findora-toolbox/main/src/bin/main/migrate_testnet.sh && bash -x migrate_testnet.sh\n\n\nWe will stop the running server and swap over to the old server files using the files uploaded into ~/migrate & ~/migrate/config now. This should not take very long and you will see the statistics run when ready.You are all migrated and online at this point with your new server with old info!","manual-migration#Manual Migration":"Here's our steps to migrating to a new server running a temporary wallet/key to start running as your old validator information.","on-your-new-server-1#On your new server":"Once you are fully syncronized on the new server you can now stop your new server's container and then begin replacing your key files. You will need to remove your current docker container with the temporary keys to build a container using the key you are migrating.To stop and remove the current temporary validator container run the following code:\n\n\ndocker stop findorad && docker rm findorad && rm -rf /data/findora/mainnet/tendermint/config/addrbook.json\n\n\n\ndocker stop findorad && docker rm findorad && rm -rf /data/findora/testnet/tendermint/config/addrbook.json\n\n\nVerify your container is shut off by running docker ps and making sure that it no longer shows your findorad container as online.Once you verify the container has stopped, Update all of the following files with the same files on your old system using a transfer app:\n\n\n/data/findora/mainnet/node.mnemonic\n/data/findora/mainnet/mainnet_node.key\n\n\n\n\n/data/findora/testnet/node.mnemonic\n/data/findora/testnet/testnet_node.key\n\n\n\nUpdate all the files in the following folder with the contents of the same folder on your old system:\n\n\n/data/findora/mainnet/tendermint/config\n\n\n\n\n/data/findora/testnet/tendermint/config\n\n\n\nReconnect fn to the new files by running the following commands:\n\n\nfn setup -S https://prod-mainnet.prod.findora.org\nfn setup -O /data/findora/mainnet/node.mnemonic\nfn setup -K /data/findora/mainnet/tendermint/config/priv_validator_key.json\n\n\n\nfn setup -S https://prod-testnet.prod.findora.org\nfn setup -O /data/findora/testnet/node.mnemonic\nfn setup -K /data/findora/testnet/tendermint/config/priv_validator_key.json\n\n\nRe-run tendermint to reconnect to the updated files by running the following command:\n\n\nexport ENV=prod\nexport NAMESPACE=mainnet\nexport LIVE_VERSION=$(curl -s https://${ENV}-${NAMESPACE}.${ENV}.findora.org:8668/version | awk -F\\  '{print $2}')\nexport FINDORAD_IMG=findoranetwork/findorad:${LIVE_VERSION}\ndocker run --rm -v ${ROOT_DIR}/tendermint:/root/.tendermint ${FINDORAD_IMG} init --${NAMESPACE} || exit 1\n\n\n\nexport ENV=prod\nexport NAMESPACE=testnet\nexport LIVE_VERSION=$(curl -s https://${ENV}-${NAMESPACE}.${ENV}.findora.org:8668/version | awk -F\\  '{print $2}')\nexport FINDORAD_IMG=findoranetwork/findorad:${LIVE_VERSION}\ndocker run --rm -v ${ROOT_DIR}/tendermint:/root/.tendermint ${FINDORAD_IMG} init --${NAMESPACE} || exit 1\n\n\nReset Permissions by running the following command (update servicefindora to your username if it's different):\nsudo chown -R servicefindora:servicefindora /data/findora\nVerify wallet information is shown in fn show with your proper wallet address showing. Verify it matches key on your old validator!DO NOT ATTEMPT TO START THE NEW SERVER YET OR YOU MAY DOUBLE SIGN","on-your-old-server#On your old server":"Now is the time to stop your old server to avoid having double singing.Stop Docker To Stop Signing on your old server by running the following code:\n\n\ndocker stop findorad && docker rm findorad && rm -rf /data/findora/mainnet/tendermint/config/addrbook.json\n\n\n\ndocker stop findorad && docker rm findorad && rm -rf /data/findora/testnet/tendermint/config/addrbook.json\n\n\nI also shutdown the old server at this point to make sure there's 0 chance of double signing. You should be ok without shutting down but if you'd like to be safe run:\nsudo init 0\nAT THIS POINT THERE IS NO FURTHER RISK OF DOUBLE SINGING BUT YOU ARE MISSING BLOCKS NOWFrom here on down the guide the following tasks are time dependent as you'll begin to miss signatures at this point.","back-on-your-new-server#Back on your new server":"Restart your Findorad Docker Container using the update_image_version script:\n\n\n\n\nwget https://raw.githubusercontent.com/FindoraNetwork/findora-toolbox/main/src/bin/main/update_mainnet.sh -O update_mainnet.sh && bash -x update_mainnet.sh\n\n\n\nwget https://raw.githubusercontent.com/FindoraNetwork/findora-toolbox/main/src/bin/main/update_testnet.sh -O update_testnet.sh && bash -x update_testnet.sh\n\n\nVerify your server catches up and is now signing blocks."}},"/findora/new":{"title":"New Findora Validators","data":{"":"Welcome to Easy Node Validator's Companion guide. Here we cover what it takes to become a Validator on Findora FRA and what you can expect along the journey.","general-overview#General Overview":"","how-much-time-does-it-take-to-manage-a-validator#How much time does it take to manage a validator?":"Being a Findora validator doesn't have a lot of time commitment to it. The systems run a Docker container and for the most part run smoothly. Setup monitoring with vStatsFindoraBot and you'll know if you run into issues.Here's some helpful tips to keep in mind along the way!\n\nThere's a few different ways to learn the software or to just simply get it installed. Here's the 3 current methods that work best. All of these methods assume you already setup a server with Docker and you're ready to get to installing:\nManual Method - Use the Findora docs site to install. This is recommended for first time installers and people not familliar with Linux.\nScript Method - Our take on the \"Automated Install\" on the page above. We've made it smoother and added a lot of bells and whistles.\nValidator Toolbox Method - Our new python app that installs & helps you manage your server. Makes everything super EASY!!! Recommended for those familiar with Linux.\n\n\n\nConfiguring a Findora node can be straight forward with either method we cover here & a cloud host provider. If you manually install Findora from their docs site or use home hardware here's some extra things to know:\nPick a server host or have hardware at home and know how to forward ports\nCreate cloud server VPS or load home system with Linux\nCreate a non-root user account\nSetup passwordless login, change ssh port, disable password & root login for more security\nSetup Firewall or port forwarding\nPull scripts & run scripts or toolbox to help with installation from github\nKnow how to migrate to a new server for disaster recovery/Migrations\n\n\n\nAfter you're elected and you've worked hard enough to secure enough delegates to become stable here's what the validator life is like daily.\nCreate a brand and market it, a lot\nFind a way to add to the community, make people know you're helping\nAnswer questions in the official Findora support channels\nWork on getting more delegations, you'll need it\nMonitor stats non stop on Smart Stake's Next Election site\nMonitor stats on your nodes\nMonitor uptime (aka missed signings)\nInvestigate missed signings\nTake crap for making any decision\nMarket your brand some more to get more delegations\nRepeat\n\n\n\nYou'll have to commit to learning how to become a Linux Administrator, keep up with the server admin changes for Findora and have time to assist your delegators if issues arise. Make sure you understand every command you run in this guide before you execute it and why you are performing it! A lot of steps may need customization and you'll want to save them for re-use later.Some other things that may add to your skill level:\nBe familiar with virtual machines and Ubuntu Server\nKnow how to create, manipulate and update files and directories\nKnow how to manage file permissions\nKnow how to create users and manage permissions\nKnow how to manage and modify bash scripts\nKnow how to manage services\nKnow how to read logs and troubleshoot issues that may arise.\nLearn Docker","admin-tools#Admin tools":"See our Admin Tools guide for Findora here. Same tools work well for Findora operators.","server-selection#Server Selection":"Grab a server. We suggest using a budget host with enough storage. Currently used providers (depending on location) are ovh.com / ovh.us, server4u, contabo. Hetzner is no longer recommended for a host as crypto is against their policy but does work great for learning and testing a Findora server.\n\n\nMinimum: 8GB RAM, 2 Core CPU (2.90GHz per core), 100GB Hard Disk\nRecommended: 16GB RAM, 4 Core CPU (2.90Ghz per core), 300GB Hard Disk\n\n\n\nTestnet database is much smaller than Mainnet, you can use a 40GB disk currently:\nMinimum: 8GB RAM, 2 Core CPU (2.90GHz per core), 40GB Hard Drive\nRecommended: 16GB RAM, 4 Core CPU (2.90Ghz per core), 40GB Hard Drive","fra-wallet#FRA Wallet":"Both of our installation methos will make a brand new wallet file (tmp.gen.keypair) and a new validator private key (priv_validator_key.json). Consider these temporary until the point you stake into the wallet address and activate the validator key. Then you'll want to keep those files forever. Both of our installation methods make a folder named ~/findora_backup with all of your files to easily transfer off of your server for storage.","firewall#Firewall":"Almost all cloud providers have a web firewall built into their hosting website. It's much easier to use than software firewalls on your server.","web-firewall-config#Web Firewall Config":"You'll need port 22 for SSH connections, and the following ports should be open for Findora.\n22\n8545\n8667-8669\n26657","ufw-software-firewall-config#UFW Software Firewall Config":"You only need this setup if your hosting company doesn't offer a web firewall or you are installing at home.If you customized your SSH port for security, modify the line with port 22 to be your new SSH port.These commands configure ufw firewall on Ubuntu 20.04/22.04LTS, use at your own risk:Configure the needed ports:\nsudo ufw allow 22\nsudo ufw allow 8545/tcp\nsudo ufw allow 8667/tcp\nsudo ufw allow 8668/tcp\nsudo ufw allow 8669/tcp\nsudo ufw allow 26657/tcp\nEnable ufw:\nsudo ufw enable\nufw Status:\nsudo ufw status","findora-components#Findora Components":"Findora has two components: A docker container that runs the validator software and has your private validator info & fn an application that contains your staking wallet and performs blockchain commands.","installation-type#Installation Type":"Which ever setup type you decide to try (Manual, Script or Toolbox) we recommend you practice on testnet first. It only takes moments to isntall and you can test out every function you'd like even before \"officially staking and starting\" your validator. It's all practice up until the moment you send FRA to the wallet you will use for your validator and stake them on chain."}},"/findora/new/script":{"title":"Script","data":{"":"","script-installation-method#Script Installation Method":"Below we'll still go over our way of setting up a brand new validator with the automated installation scripts. We're assuming you have a server and a regular user account logged in already. Get to that point before proceeding:","install-docker#Install Docker":"The official guide doesn't mention that you need to install Docker.Taken from this guide here's our notes for installing docker on Ubuntu 20.04/22.04LTS once your server is online and logged in as the user servicefindora (update if you used a different account):\nsudo apt update -y && sudo apt install apt-transport-https ca-certificates curl software-properties-common -y && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable\" && sudo apt install docker-ce -y\nRun the following. If your username is not servicefindora update the username below first:\nsudo usermod -aG docker servicefindora","verifiy-docker-access#Verifiy Docker access":"At this point you need to disconnect and reconnect so your user account gains access to the Docker daemon.Once reconnected, type groups and you will see a list of your groups. If docker appears, you are ready to run the install script.","download-auto-installation-script#Download Auto Installation Script":"At this point you're ready to start the manual installation on docs.findora.org but if you want to make it easier to run and setup, run the following command to automate the rest of the installation at this point:\n\n\nwget https://raw.githubusercontent.com/FindoraNetwork/findora-toolbox/main/src/bin/main/install_mainnet.sh -O node_init_mainnet.sh && bash -x node_init_mainnet.sh\n\n\n\nwget https://raw.githubusercontent.com/FindoraNetwork/findora-toolbox/main/src/bin/main/install_testnet.sh -O node_init_testnet.sh && bash -x node_init_testnet.sh\n\n\nThe installer will pull the installation script and get everything setup. At the end of the installer you'll have a fully working validator syncing up to the blockchain on a brand new tmp.gen.keypair and priv_validator_key.json file. These are usable as wallets but are also disposable still at this point. You can test out all the functions of a Findora server now as long as you don't run the staking and creation commands.","after-installation#After Installation":"At this point you'll have a system that begins syncing automatically on the blockchain after the database download and unpacking completes. Wait for your sync_status to equal false before creating your validator or migrating to a new system.","after-installation-1#After Installation":"After you finish the installation script you still need to fund your wallet, stake your FRA and start your validator and backup your private key files. Head over to our post install section for those commands!"}},"/findora/post":{"title":"Easy Node's Post Install Tips","data":{"":"Here's a few things to know and check up on after you get a Findora server online.","toolbox-help#Toolbox help":"You can find our baked in options and help menu by running:\npython3 ~/findora-toolbox/src/app.py -h\n\n\n\n-h, --help - Show the help menu\n-s, --stats - Show your stats without loading the full toolbox\n-c, --claim - Claim all of your pending rewards\n--mainnet - Run the installer with the mainnet option by default\n--testnet - Run the installer with the testnet option by default\n--reset - This will wipe all of your findora data, settings, and toolbox settings to allow a reload of Findora","finish-setup#Finish setup":"To finish the setup of a scripted or toolbox installation and to start siging blocks, you need to complete this section of tasks first.","create-staker_memo-file#Create staker_memo file":"If you used the validator toolbox to install, you'll have a staker_memo file in your home directory. If you installed manually or the script you'll need to create the file staker_memo in your home directory.To create the file or to open the example we've created run:\nnano ~/staker_memo\nYou can copy the following data if you're creating a new file:\n{\n\"name\": \"Example Node!\",\n\"desc\": \"I am just an example description. Please change me to something better.\",\n\"website\": \"https://www.example.com\",\n\"logo\": \"https://www.example.com/logo.png\"\n}\nYou can now edit your future validator information. This file defines your validator name, description, your website, and logo to display which you'll send to the blockchain when you run the create validator command. We suggest ipfs for logo hosting, use your free account at pinata.cloud.After you update your info save and exit staker_memo with:\nctrl+x y enter","fund-validator#Fund Validator":"You can see your FRA validator address by running fn show or toolbox optioin #2. This is the address you'll want to send at least 10,001 FRA into for staking when you create your validator.","validator-wallet-commands#Validator Wallet Commands":"Here we're going to cover the command to create your validator and the commands you'll use after you've created your validator.\n\nHere's an example of the creation command. Note that you only are able to send the creation command one time. Customize this command to your needs before sending:\nfn stake -n $((15000 * 1000000)) -R 0.02 -M \"$(cat staker_memo)\"\nTo breakdown the command below:\nStake 15,000 FRAs with a commision rate of 2% using your staker_memo file\nNote: that is 15000 * 1000000 FRA units in the example\n\n\n\nSimply edit your staker_memo file and then re-submit the updated information with following command:\nfn staker-update -M \"$(cat staker_memo)\"\n\n\nIf you would like to change your commission simply add the -R flag and your new rate, this is an example to set it to 5% commission:\nfn staker-update -R 0.05\n\n\nIf you would like to update both at the same time you can chain the commands together, ie:\nfn staker-update -M \"$(cat staker_memo)\" -R 0.05","common-commands#Common Commands":"The most commonly used commands and how to find the rest that may be needed.\n\nThe command below will run and display your stats via validator toolbox:\npython3 ~/findora-toolbox/src/app.py -s\nYou can also run this remotely from your home terminal via ssh. Customize the command below with your Findora server username, IP and port. Run the command to pull stats remotely:\nssh [USERNAME]@[IP] -p [PORT] python3 /home/servicefindora/findora-toolbox/src/app.py -s\n\n\nWhen troubleshooting, always check your Docker logs for issues if your container is not running (use docker ps to see if your container is online):\ndocker logs -f findorad","view-your-stats-online#View Your Stats Online":"After you sucessfully register your wallet and stake your initial Findora your validator will show up on the staking dashboard along with the SmartStake site.","backup-key-files#Backup Key Files":"If you used the scripted or toolbox method all the files you need to backup will be stored in ~/findora_backup for safe keeping automatically. Transfer this folder home using an sFTP program or command line utility.\n\nIf you'd like to backup manually and aren't using the toolbox here's a list of key files to backup and to keep private at all times!\n- tmp.gen.keypair - This file is the same as your network_node.key file (network being mainnet or testnet)\n- /data/findora/[network]/tendermint/config folder - This is a copy of your tendermint/config folder which contains priv_validator_key.json\nOptionally you should backup your staker_memo file for re-using later.\n\nIf you're using Termius simply backup the ~/findora_backup folder to your PC at home along with staker_memo.\n\nIf you'd like to use your local terminal to pull the files from your server to your system run the following commands:\n# Customize this command with your username and IP address.\nrsync -av user@ip_address:~/findora_backup .\nscp user@ip_address:~/staker_memo .\nThis will use your ssh keys or ask for a password depending on your setup. The . is the local location. Using . will copy it to the current folder, customize it to save elsewhere.","findora-validator-troubleshooting#Findora Validator Troubleshooting":"","validator-toolbox#Validator Toolbox":"The toolbox does automated troubleshooting when you fire it up. We'll make sure everything is online before loading or walk you through running the \"update/restart script\" and then the safety_clean script if the first option doesn't bring your validator back online.","manual-troubleshooting#Manual Troubleshooting":"If you need to manually troubleshoot, here's our recommended process. First determine if your problem is with fn or with docker.","docker-container-troubleshooting#Docker Container Troubleshooting":"Check to see if your docker container is running:\ndocker ps\nAn example of findorad not running, continue to next step.\n\nAn example of findorad running, congrats! If your container is online and curl still doesn't respond, check your Firewall instead.","check-docker-logs#Check Docker Logs":"Check your docker logs if the container is offline:\ndocker logs findorad","updaterestart-script#Update/Restart Script":"Analyze the error - We suggest running the \"update/restart\" script from our repository first to try to fix the issue. Run the following code to run our update script (or use the option in the Validator Toolbox):\n\n\ncd ~/ && wget https://raw.githubusercontent.com/FindoraNetwork/findora-toolbox/main/src/bin/main/update_mainnet.sh -O update_mainnet.sh && bash -x update_mainnet.sh\n\n\n\ncd ~/ && wget https://raw.githubusercontent.com/FindoraNetwork/findora-toolbox/main/src/bin/main/update_testnet.sh -O update_testnet.sh && bash -x update_testnet.sh\n\n\nIf everything goes well the container will restart, be back online and show stats at this point. If you still have an error, continue onto Safety Clean.","safety-clean-script#Safety Clean Script":"If it fails and you still have the following error in your findorad logs at this point, we suggeset a safety_clean to reset your data and attempt to fix the problem via that method:\n\nYou can pull the latest copy and run it with the following code, this will wipe and reload the database:\n\n\ncd ~/ && wget https://raw.githubusercontent.com/FindoraNetwork/findora-toolbox/main/src/bin/main/safety_clean_mainnet.sh -O safety_clean.sh && bash -x safety_clean.sh\n\n\n\ncd ~/ && wget https://raw.githubusercontent.com/FindoraNetwork/findora-toolbox/main/src/bin/main/safety_clean_testnet.sh -O safety_clean.sh && bash -x safety_clean.sh\n\n\nAt the end of our script, your stats will print out. You should be back online at this point and syncing should resume.","check-stats#Check Stats":"Check your stats until catching_up is false with the following code:\ncurl 'http://localhost:26657/status'","fn-troubleshooting#fn Troubleshooting":"Run fn and make sure it's error free. If you have any errors there's 3 commands to setup/reset fn, run the following for mainnet (replace mainnet with testnet if testing):\nexpor ROOT_DIR=/data/findora/mainnet && fn setup -S https://prod-mainnet.prod.findora.org && fn setup -O ${ROOT_DIR}/node.mnemonic && fn setup -K ${ROOT_DIR}/tendermint/config/priv_validator_key.json\nOnce you've reconnected the files with the above command fn show should now properly display your wallet (and if created on chain, validator) information.","validator-software-version-updates#Validator Software Version Updates":"Note: These are both included in the validator toolbox, but for those of you who would like to manually run scripts:","updaterestart-validator-script#Update/Restart Validator Script":"The update_mainnet.sh script will stop your container, pull in any updates, and restart the container if your files are in the proper spot and your permissions are set properly. Operators also use this to restart their containers or start them up if they are down.\n\n\ncd ~/ && wget https://raw.githubusercontent.com/FindoraNetwork/findora-toolbox/main/src/bin/main/update_mainnet.sh -O update_mainnet.sh && bash -x update_mainnet.sh\n\n\n\ncd ~/ && wget https://raw.githubusercontent.com/FindoraNetwork/findora-toolbox/main/src/bin/main/update_testnet.sh -O update_testnet.sh && bash -x update_testnet.sh","safety-clean-script-1#Safety Clean Script":"This script will wipe your data and reload a fresh database. This can take some time so there will be missed blocks but it will just clean the database, reload the database and restart your validator without wiping other files.To stop and reload the database on your server run the following code, choose the code for your network below:\n\n\ncd ~/ && wget https://raw.githubusercontent.com/FindoraNetwork/findora-toolbox/main/src/bin/main/safety_clean_mainnet.sh -O safety_clean.sh && bash -x safety_clean.sh\n\n\n\ncd ~/ && wget https://raw.githubusercontent.com/FindoraNetwork/findora-toolbox/main/src/bin/main/safety_clean_testnet.sh -O safety_clean.sh && bash -x safety_clean.sh","fn-update#fn Update":"Our fn_update script will pull down and setup your fn application with the latest version online. You can run the update with the following code:\n\n\ncd ~/ && wget https://raw.githubusercontent.com/FindoraNetwork/findora-toolbox/main/src/bin/main/fn_update_mainnet.sh -O fn_update.sh && bash -x fn_update.sh\n\n\n\ncd ~/ && wget https://raw.githubusercontent.com/FindoraNetwork/findora-toolbox/main/src/bin/main/fn_update_testnet.sh -O fn_update.sh && bash -x fn_update.sh","vstats-bot-findora#vStats Bot Findora":"Fortune Validator has created the telegram bot vStatsFindora to help you monitor your server. Sign up with the Telegram bot right here.","resources#Resources":"Findora Main Dashboard - Findora's Official Dashboard & Explorer\nFindora SmartStake - Stats\nFindora Telegram - A telegram chat full of Findora Validators to ask quesitons. Ask for an invite in the main.\nFindora's Official Discord Server - The central spot for all Findora news and updates."}},"/findora/toolbox-web":{"title":"Findora Toolbox - Web User Interface","data":{"":"A web interface for the findora-toolbox for Findora Validators.","web-stats#Web Stats":"Would you like to go to a web page on your validator server to get your stats? This is it!","install-web-ui#Install Web UI":"The web files now come inside toolbox in the ~/findora-toolbox/web directory!","run-web-ui#Run Web UI":"","run-web-ui-manually#Run Web UI Manually":"After you install, you'll need to configure your server. You can manually run the following code to launch the web server app. On the first launch it'll ask for a username, password, and port to use for your web service. We suggest using a high port number (in the 30000 - 65500 range to keep it off scanners) and possibly locking down your firewall to your home/work IPs for extra security (don't forget to open the port # you pick on your firewall/ufw setup as well). Here's the code to launch the app.py:\npython3 ~/findora-toolbox/web/src/app.py\nPress ctrl+c to stop the application or close your terminal to end the web service.","run-web-ui-with-tmux#Run Web UI with tmux":"We suggest launching your session in tmux if you would like to keep it running. If you don't have tmux installed, run: sudo apt install tmux to get it onto your system. Then you can run a tmux session and launch the app.py:\ntmux\npython3 ~/findora-toolbox/web/src/app.py\nOnce the app launches you can close the session terminal and it'll keep running, or you can press ctrl+b d to detach from it and continue using your system normally while it runs in the background. If you reboot you will need to restart the tmux session and app.py or if you'd like to re-attach to the running tmux, simply type tmux attach to reconnect. ctrl+c will stop your running app.py if it's on your screen showing information.","run-web-ui-as-a-service#Run Web UI as a Service":"We've included a service file you can customize for your system. First Copy the file to system.d:\nsudo cp ~/findora-toolbox/web/src/bin/findora-web.service /etc/systemd/system/\nIf you use a different username, update any of the places you see servicefindora in the service file to be your username if different. You can edit the service file with:\nsudo nano /etc/systemd/system/findora-web.service\nEnable and start your service with:\nsudo systemctl enable findora-web\nsudo systemctl start findora-web\nNow it'll simply always run as a service. Verify your service is running with:\nsudo service findora-web status\nVerify it looks similar to the output below:","changeupdate-ui-username-password-port#Change/Update UI Username, Password, Port":"To change your username, password or port edit ~/.easynode.env with an editor, for example:\nnano ~/.easynode.env\nEdit the info you'd like to change, save and exit. Then restart your web server or service to begin using updated options.","fail2ban#Fail2Ban":"If you're already using Fail2Ban from earlier in our Server Admin Tools guide to secure ssh, you can add a security layer to the port number you choose above.For your web server, we suggest using a high port number to keep your server off of more IP scanners. 30k+ is suggested, highest port is 65535 - Don't use the last port or go over that #.Here's an example of creating a file to secure findora-toolbox-web on port 29843. Edit the new file with:\nsudo nano /etc/fail2ban/jail.d/findora-toolbox-web.conf\nThen add the following lines to your new file, save and exit:\n[findora-toolbox-web-auth]\nenabled = true\nport    = 29843\nfilter  = findora-toolbox-web-auth\nlogpath  = /var/log/auth.log\nmaxretry = 3\nbantime = 120\nThen you'll need to reload fail2ban to apply your changes:\nsudo systemctl restart fail2ban","https#HTTPS":"The issue with using HTTPS is it has to be run on a domain name and we're simply going by IP/Port here.You can run a reverse proxy with nginx and build this into a container behind SSL/Domain if you'd like but this is for private personal usage so we're not providing instructions or support for SSL at this time. We highly suggest locking the port down to your home/work IP if you're going to have it open and running 24/7.","contact#Contact":"Find all of our socials on EasyNode.PRO if you have any questions."}},"/harmony/companion":{"title":"New Harmony Validators","data":{"":"Welcome to Easy Node Validator's Companion guide. Here we cover what it takes to become a Validator on Harmony ONE and what you can expect along the journey.This first page has notes you need to keep in mind while going through the official manual installation if you choose that route for your first server.\n\n\n\n\nCreate nodes (servers) to sign blocks for your validator wallet\nCreate a brand and market it, a lot\nFind a way to add to the community, make people know you're helping\nAnswer questions in the official harmony support channels\nWork on getting more delegations, you'll need it\nDebate when it's an appropriate time to add a 2nd BLS key to your server (right now it's around 10 million before you look at a 2nd key)\nStart new nodes as info and shard conditions change daily\n\n\n\nThere's really not much to configuring a new harmony node server or rolling out an additional node when needed if you're familiar with Linux and if the following list is familiar to you:\nCreate cloud server\nCreate a non-root user account\nCreate a directory for the install files and database\nDownload and install hmy & harmony\nSetup BLS keys in .hmy/blskeys\nImport or create a wallet\nSync Database\nInstall and start service\nSetup scripts to assist with management\n\n\n\nAfter you're elected and you've worked hard enough to secure enough delegates to become stable here's what the validator life is like daily.\nMonitor stats non stop on Smart Stake's Next Election site\nMonitor stats on your nodes\nMonitor uptime (aka missed signings)\nInvestigate missed signings\nMake decisions on adding or removing BLS keys before elections every 18ish hours\nTake crap for making any decision\nMarket your brand some more to get more delegations\nRepeat\n\n\n\nYou'll have to commit to learning how to become a Linux Administrator, keep up with the server admin changes for Harmony and have time to assist your delegators if issues arise.Understand every command you run before you execute it and why you are performing it.\nBe familiar with virtual machines and Ubuntu Server\nKnow how to create, manipulate and update files and directories\nKnow how to manage file permissions\nKnow how to create users and manage permissions\nKnow how to manage and modify bash scripts\nKnow how to manage services\nKnow how to read logs and troubleshoot issues that may arise.","get-started#Get started":"So you're ready to get started? Well let's get into what's next!","server-selection#Server Selection":"The first thing to get setup is a server. It's up to you to select a provider and host with enough power to run your validator. Do some research as to which validator hosts are in use currently, this changes often.","user-account--ssh-keys#User Account & SSH Keys":"We covered creating a user account in our admin tools section.","create-a-harmony-folder#Create a Harmony folder":"We suggest creating a folder named harmony inside of your user account to store your files and database.Once you are logged into your new regular user account, create a harmony directory inside the home directory of the new user with the following command:\nmkdir ~/harmony\nEvery time you reconnect you'll have to change directory to your harmony folder. If you ever are \"lost\" after moving around and need to get back to the harmony folder type the following command:\ncd ~/harmony\nWhen you connect or want to run commands, use the command above to get back to that folder. You'll want to run all of your installation commands and validator commands from this folder.","firewall-setup-notes#Firewall Setup Notes":"For your firewall we only suggest opening up the minimum required ports publicly.","inbound-rules#Inbound Rules":"22 TCP SSH Access - We suggest locking this to your home or work IP address only and disabling password logins to avoid brute force attacks.\n6000 TCP\n9000 TCP","outbound-rules#Outbound Rules":"You're safe to leave all outbound ports open on your firewalls to allow your server to talk out to the internet.","validator-wallet#Validator Wallet":"In the examples below don't forget to replace serviceuser with your custom account name before you run them if it's different!","option-a-create-on-new-validator#Option A: Create on new validator":"As a validator your going to need a wallet for validation. The creation will come late in the guide, once your server is online and synced up. We suggest creating a brand new wallet and only using your designated \"Validator Wallet\" for validating and collecting the rewards you get from it to keep your data separate. You can send the create validator command below:\ncd ~/harmony\n./hmy keys add serviceuser --passphrase\nIt will ask for your password twice, and then repeat back your mnemonic phrase. Keep it somewhere safe and secure and never share it with anyone! You only get one shot at writing down your mnemonic phrase with this option, be very careful and record it properly","option-b-using-an-existing-wallet-instead#Option B: Using an existing wallet instead":"You can also import an existing wallet in a variety of ways. Take a look at the output of the command ./hmy keys below to see your options.\n\n./hmy keys\nManage your local keys\n\nUsage:\nhmy keys [flags]\nhmy keys [command]\n\nAvailable Commands:\nadd                   Create a new keystore key\ncheck-passphrase      Check if passphrase for given account is valid.\nexport-ks             Export the keystore file contents\nexport-private-key    Export the secp256k1 private key\ngenerate-bls-key      Generate bls keys then encrypt and save the private key with a requested passphrase\ngenerate-bls-keys     Generates multiple bls keys for a given shard network configuration and then encrypts and saves the private key with a requested passphrase\nget-public-bls-key    Get the public bls key associated with the provided private bls key\nimport-ks             Import an existing keystore key\nimport-private-key    Import an existing keystore key (only accept secp256k1 private keys)\nlist                  List all the local accounts\nlocation              Show where `hmy` keeps accounts & their keys\nmnemonic              Compute the bip39 mnemonic for some input entropy\nrecover-bls-key       Recover bls keys from an encrypted bls key file\nrecover-from-mnemonic Recover account from mnemonic\nremove                Remove a key from the keystore\nsave-bls-key          Encrypt and save the bls private key with a requested passphrase\n\nFlags:\n-h, --help   help for keys\n\nGlobal Flags:\n--file string   Path to file for given command when applicable\n-e, --ledger        Use ledger hardware wallet\n--no-latest     Do not add 'latest' to RPC params\n--no-pretty     Disable pretty print JSON outputs\n-n, --node string   <host> (default \"http://localhost:9500\")\n-v, --verbose       dump out debug information, same as env var HMY_ALL_DEBUG=true\n\nUse \"hmy keys [command] --help\" for more information about a command.\nFor example, if you'd like to recover your wallet from a mnemonic phrase, run the following command.\n./hmy keys recover-from-mnemonic serviceuser --passphrase\nAfter you've created a wallet or imported an existing wallet successfully you can view your registered validator wallet address with the following command.\n./hmy keys list","fund-wallet#Fund Wallet":"Once you know which wallet you'll be using on your validator, you must send at least 10001 Harmony $ONE to the new wallet before you send your create-validator command on the blockchain during the Official Setup.","bls-keys#BLS Keys":"As a new user you'll be setting up some BLS Keys for your server to use on the blockchain during the Official Setup Guide. This section is expanded notes for when that time comes.","setting-up-bls-keys#Setting up BLS Keys":"We suggest making 10 BLS keys on the shard you start with. Save them to your home PC. They can be reused anytime you deploy that shard again and only need to be created once. Once you have your .key & .pass files save them in a folder at home for reuse via WinSCP, scp, rsync, or however you send files to a server.When you start you won't need more than 1 for quite some time (at least 9.5 million $ONE today) but if you have the others in place you won't need to restart your services and miss blocks to add more keys to your nodes.","creating-new-bls-keys#Creating new BLS keys":"This covers creation of your BLS Key(s) that you decided on before starting the guide. We encourage you to run one on shards 1-3 instead of just 0.Here you'll be creating the keys, creating a folder, and copying them into the proper folders. You may want to store a backup of these files as well.To keep things simple, set up a password file before you begin. This will make it easy to copy the password to the required .pass files.\ncd ~/harmony\necho -E 'password' > blskey.pass\nTo create BLS Keys after you've completed the toolbox installation:\n./hmy keys generate-bls-keys --count 10 --shard 1 --passphrase-file blskey.pass\n\nThis will create .key files in your ~/harmony directory. Copy those key files\nto your ~/harmony/.hmy/blskey folder.\ntext copy cp *.key ~/harmony/.hmy/blskeys The last step to use your blskey.pass file is to edit your harmony.conf file and setup the path.\nnano ~/harmony/harmony.conf\nChange the line PassFile = [] to read:\nPassFile = \"./blskey.pass\"\nSave and exit nano (Ctrl+X y enter)","backup-your-key-and-pass-files--home-or-in-the-cloud#Backup your .key and .pass files @ home or in the cloud":"Using your admin transfer tool of choice, transfer your .key and .pass files to your home pc and store them securely. The key and pass files are all you need backed up to quickly restore a node. Once you create keys for a shard you can save them and re-use them when needed. They do not need to be created again once you have working copies backed up.We suggest building a folder that contains a folder for each shard and storing your keys in there.","ready-to-install#Ready to Install":"You're ready to hit our next section which you'll use along side the official harmony documentation to install. Each chapter in the next section matches up to the official Harmony docs website. Read our notes on what to do before you go through their pages so you can avoid a lot of unneccessary information."}},"/harmony/companion/official/create":{"title":"Creating a Validator","data":{"":"Before you can create a validator on the blockchain you need a fresh wallet to use for your validator account.","creating-a-validator#Creating a Validator":"Here's the example command given in the official guide below. I'll suggest some updates and give an example command in the following steps.\n\n\n./hmy --node=\"https://api.s0.t.hmny.io\" staking create-validator \\\n--validator-addr [ONE ADDRESS] --amount 10000 \\\n--bls-pubkeys [BLS PUBLIC KEY1],[BLS PUBLIC KEY2] \\\n--name \"[NAME]\" --identity \"[IDENTITY]\" --details \"DETAILS\" \\\n--security-contact \"CONTACT\" --website \"YOUR-WEBSITE.COM\" \\\n--max-change-rate 0.1 --max-rate 0.1 --rate 0.1 \\\n--max-total-delegation 100000000 --min-self-delegation 10000 --passphrase --gas-price 100\n\n\n\n./hmy --node=\"https://api.s0.b.hmny.io\" staking create-validator \\\n--validator-addr [ONE ADDRESS] --amount 10000 \\\n--bls-pubkeys [BLS PUBLIC KEY1],[BLS PUBLIC KEY2] \\\n--name \"[NAME]\" --identity \"[IDENTITY]\" --details \"DETAILS\" \\\n--security-contact \"CONTACT\" --website \"YOUR-WEBSITE.COM\" \\\n--max-change-rate 0.1 --max-rate 0.1 --rate 0.1 \\\n--max-total-delegation 100000000 --min-self-delegation 10000 --passphrase --gas-price 100\n\n\n\nCopy the entire command. Extra white spaces in the command could cause errors.\nName, identity, details, security-contact and website need to be put in double quotes if there are more than one word separated by space (example --name \"John the validator\").","our-suggestions#Our suggestions":"You will want to setup your logo for the validator. Here's the Adding A Validator Logo section of the official guide that will get you set up with an identity string. We suggest including the identity string in your create-validator command.With that in mind, the only extra item we suggest to include is the --identity information. Here's an example with a fake address and information as an example.\n\n\n./hmy --node=\"https://api.s0.t.hmny.io\" staking create-validator \\\n--validator-addr one1rka0v5rct0857f2f*6ahn0cyd89uvravr3yjw --amount 10000 \\\n--bls-pubkeys a243b3a090063bae6aeca9215*05de1a94a033c50ab98ed98c50ab98ed984c9cf23513585e1af0cc4c9cf23513585e1af0cc \\\n--name \"My Awesome Validator\" --identity 05de1a94a0*33c50ab98ed98 --details \"All your validator notes that show up on the staking.harmony.one site\" \\\n--security-contact \"myemail@address.com\" --website \"your-website.com\" \\\n--max-change-rate 0.1 --max-rate 0.1 --rate 0.1 \\\n--max-total-delegation 100000000 --min-self-delegation 10000 --passphrase --gas-price 100\n\n\n\n./hmy --node=\"https://api.s0.b.hmny.io\" staking create-validator \\\n--validator-addr one1rka0v5rct0857f2f*6ahn0cyd89uvravr3yjw --amount 10000 \\\n--bls-pubkeys a243b3a090063bae6aeca9215*05de1a94a033c50ab98ed98c50ab98ed984c9cf23513585e1af0cc4c9cf23513585e1af0cc \\\n--name \"My Awesome Validator\" --identity 05de1a94a0*33c50ab98ed98 --details \"All your validator notes that show up on the staking.harmony.one site\" \\\n--security-contact \"myemail@address.com\" --website \"your-website.com\" \\\n--max-change-rate 0.1 --max-rate 0.1 --rate 0.1 \\\n--max-total-delegation 100000000 --min-self-delegation 10000 --passphrase --gas-price 100\n\n\nCopy the entire command above and edit it yourself. Extra white spaces in the command could cause errors.Decide on your max-change-rate and max-rate before sending your command. These cannot be modified after you have sent your create validator command, like ever!Here's all of the options you will customize before sending your create command.\nvalidator-addr - Your Validator wallet with 10001+ coins available to delegate at least 10k.\namount - Must be at least 10k. Have extra one available for fees. 1 $ONE is enough currently.\nbls-pubkeys - Your BLS public key\nname - The name you want listed on the validator staking page\nidentity - Your validator logo string you made earlier\ndetails - The details you want on the validator staking page\nsecurity-contact - Your email address\nwebsite - Your website or social media account\nmax-change-rate - Maximum you can adjust your rate in a 24 hour period, you can never change this!\nmax-rate - Maximum rate you can charge as a fee on your validator, you can never change this!\nrate - Your current fee rate\nmax-total-delegation - The max $ONE that can be delegated by one single wallet\nmin-self-delegation - Must be at least 10k, you can leave this at 10k."}},"/harmony/companion/official":{"title":"About","data":{"":"This section matches up page for page with the Official Harmony $ONE Validator Documents.In the next few sections you'll find Server Setup (Hardware), Node Setup (Harmony Software), Creating A Validator & Managing A Validator in the official documents to line up with.\nRead our sections before going through the matching section of the same name in the official guide to save yourself some time!!!","original-software-setup-guide#Original Software Setup Guide":"Match the next 4 sections up with the Official Harmony $ONE Validator Documents when setting up your validator. Read our notes first to help you cut out a lot of the junk that the official documents contain.\nNode Setup Matches up with the Node Setup section in the official docs.\nCloud Setup Matches up with the Cloud Setup section in the official docs.\nCreating A Validator Matches up with the Creating A Validator section in the official docs.\nManaging A Validator Matches up with the Manage A Validator section in the official docs.","post-install#Post Install":"Post install our guides fuse back together, follow the links after the section that matches up with the official documentation to proceed with becoming a master node manager!"}},"/harmony/companion/official/manage":{"title":"Managing A Validator","data":{"":"Notes on the managing a validator section","managing-notes#Managing Notes":"There's not much to go over on this section as it just shows you commands for management. This wraps up getting your validator online. You're signing blocks and good to go now, right?","adding-a-validator-logo#Adding A Validator Logo":"If you add a logo via the --identity command while creating a validator or send one later via edit-validator the logo may not be active on the Testnet pages but it's working."}},"/harmony/companion/official/node":{"title":"Setting up BLS Keys","data":{"":"Notes on the node setup section","setup#Setup":"Remember to read our [Before I Set a Validator Up]/harmony/companion) section and make a plan before starting here. You'll want to have a non-root user account (with sudo access to run root commands is ok!) created and the ~/harmony directory setup.\nWe won't cover multiple BLS Keys here as they aren't needed to get started. Make one and add one to start (worry about BLS keys when we get there).\nIf you're doing it \"The Easy Node Way\" and have already made a folder, always remember to change into your harmony directory before running commands!\ncd ~/harmony","hmy-cli-download#HMY CLI Download":"","download-harmony-cli-tool-for-linux#Download Harmony CLI tool For Linux":"Use the curl command provided to download and install HMY CLI on your Linux OS inside of your ~/harmony folder.\ncurl -LO https://harmony.one/hmycli && mv hmycli hmy && chmod +x hmy","output#Output":"Verify it's installed by running this command.\n./hmy --node=\"https://api.s0.t.hmny.io\" cookbook\nThe Output is a reference for commands you an perform now with the HMY CLI.","our-notes-on-bls-keys#Our notes on BLS keys":"Here's our suggestions on how to create BLS Keys for your server.\nWhen you start you won't need more than 1 for quite some time (at least 9.5 million $ONE today) but if you have the others in place you won't need to restart your services and miss blocks to add more keys to your nodes.","creating-new-bls-keys#Creating new BLS keys":"This covers creation of your BLS Key(s) that you decided on before starting the guide. We encourage you to run one on shards 1-3 instead of just 0.\nHere you'll be creating the keys, creating a folder, and copying them into the proper folders.\nYou may want to store a backup of these files as well.","syncing-with-rclone#Syncing with Rclone":"Rclone only needs to be run one time per shard database. It will get your database as close to updated as possible (most likely end of last epoch) and then later the harmony service will finish the synchronization before you send your create my validator command.","1-installing-rclone#1. Installing Rclone":"This section walks you through installing rclone.","2-configuring-rclone#2. Configuring Rclone":"This section shows you where your file will be stored and gives you a command to create the file. No changes needed.","3-running-rclone--4-cheat-sheets#3. Running Rclone & 4. Cheat Sheets":"These sections give you the command to download the databases for the shards you'd like. If you're on shard 1-3 you will have 2 commands to run.","archival-node#Archival Node":"Archival Node can be ignored if you're not setting up an Archival Node (you wouldn't be here for that!).","installing-a-node-with-binary#Installing a Node with Binary":"This is the method you currently want to use. Skip Autonode & Node.sh for you setup. Installation is pretty standard here, no changes just run the curl command to install harmony in your folder.","1-download-node-binary#1. Download Node Binary":"Use the command you'd like to install the harmony application. Run this inside your ~/harmony folder.","option-1-setup-using-config-file-recommended#Option 1: Setup Using Config File (recommended)":"You will want to setup a configuration file to use with your service in the next step. The default configuration file works for 99.9% of administrators.\nMost people can skip options 2 & 3 here and go onto setting up harmony as a service with Systemd.","setup-systemd#Setup Systemd":"You can create the service as per normal but some configuration changes may be required on this step. You'll want to modify the harmony service file below to meet your installation & configuration needs.\nTo use the setup in nano instead of vi as the guide changes to, run this command instead.\n\nsudo nano /etc/systemd/system/harmony.service\n\nsudo vi /etc/systemd/system/harmony.service\n\nLine 9 - Set this to the account name you're using\nLine 10 & 11 - If you used a harmony subdirectory as suggested set them up as shown below\n\n\n[Unit]\nDescription=Harmony daemon\nAfter=network-online.target\n\n[Service]\nType=simple\nRestart=always\nRestartSec=1\nUser=[myUserName]\nWorkingDirectory=/home/[myUserName]/harmony\nExecStart=/home/[myUserName]/harmony/harmony -c harmony.conf\nSyslogIdentifier=harmony\nStartLimitInterval=0\nLimitNOFILE=65536\nLimitNPROC=65536\n\n[Install]\nWantedBy=multi-user.target\n\nAdd your user account name in place of [myUserName] in the commands in this guide.\nAt this point you can continue with the rest of the regular Official Harmony Guide.\nWhen you run the 3 commands after you edit the above & create the systemd file you may get an error if you check your service as you haven't loaded a wallet yet. In the next section you'll create or add an existing wallet as your official validator address.","updating-a-node#Updating a Node":"You won't need to update a node at this point. However when you're ready to upgrade see our Upgrade Script section if you'd like to script the upgrade process.","checking-a-node#Checking a Node":"There's a few commands you're going to use here regularly to check things out, however if you set up our Stats Script you can use that to check your status and use these sparingly as needed.","checking-for-bingo#Checking for BINGO":"One command you'll want to run from time to time on both nodes to verify they are in sync is known as the \"BINGO\" command around the Harmony community. This command shows you a live view of the end of your log and prints every time it finds a block signature. You won't see this if you are not elected! To check for BINGO run the following command:\ntail -f latest/zerolog-harmony.log | grep BINGO"}},"/harmony/companion/official/post":{"title":"Post","data":{"":"","post-install#Post Install":"You're ready to skip over to the post install section of the Harmony guide at this point now that you're done with the official guide."}},"/harmony/companion/official/setup/cloud":{"title":"Cloud Guides","data":{"":"Notes on the cloud setup section","pick-your-provider#Pick your provider":"This is an ever evovling list and we don't offer suggestion any further on this. Join the community chats and find out what hosts are popular at the moment."}},"/harmony/companion/official/setup":{"title":"Hardware Requirements","data":{"":"Hardware requirements from the official guide and our notes.\nChoose from a regular Ubuntu server or a Raspberry Pi for your node.","standard-regular-ubuntu-linux-server-node-requirements#Standard Regular Ubuntu Linux Server Node Requirements":"Our notes to use along with the official Harmony ONE Validator documentation","server-requirements#Server Requirements":"Here's the current recommended hardware from Harmony Foundation:\n\n\nHere's our recommendations today:\nBare metal server rental (no shared VPS)\nCPU - 8 dedicated CPUs\nMemory - 16GB should work but 32GB+ is recommeneded\nDisk - NvME disks\nOS - Ubuntu 20.04/22.04LTS\nNetwork - 1GBPS+ bandwidth with at least 6TB> month cap (uncapped best for instabilitiy of the network)\nProviders - We no longer recommend Digital Ocean, Vultr, AWS, GCP or Azure as they are not sufficient or too expensive","storage#Storage":"Before we talk about providers let's discuss storage. Make sure you have enough space as we're currently adding over 300GB a month due to transaction increases.\n\nDigital Ocean has the option to use \"Volumes\" that can be easily expanded when more space is required to help with cost savings."}},"/harmony/companion/official/setup/rasppi":{"title":"Raspberry Pi Node Setup","data":{"":"Harmony Raspberry Pi Setup Guide","raspberry-pi#Raspberry Pi":"We don't currently run a raspberry pi validator node but there are a few full time operators running nodes with great success.\nYou can catch the official guide here, we don't have notes specifically for the pi but we may some day!\nThis guide was created by ben2k aka Stakeridoo - Check out their validator page here."}},"/harmony/post":{"title":"Post Installation Tips","data":{"":"Here's a lot of handy info post installation to help you manage your node better.","update-validator-information#Update Validator information":"We've already sent our create-validator command, now you can use the same command to send only the fields you would like to update.","edit-validator#edit-validator":"If you recall, earlier you sent a command simiar to these examples only I've updated them to be edit-validator instead of create validator:\n\n\n./hmy --node=\"https://api.s0.t.hmny.io\" staking edit-validator \\\n--validator-addr one1rka0v5rct0857f2f*6ahn0cyd89uvravr3yjw \\\n--bls-pubkeys a243b3a090063bae6aeca9215*05de1a94a033c50ab98ed98c50ab98ed984c9cf23513585e1af0cc4c9cf23513585e1af0cc \\\n--name \"My Awesome Validator\" --identity 05de1a94a0*33c50ab98ed98 --details \"All your validator notes that show up on the staking.harmony.one site\" \\\n--security-contact \"myemail@address.com\" --website \"your-website.com\" \\\n--passphrase --gas-price 100\n\n\n\n./hmy --node=\"https://api.s0.b.hmny.io\" staking edit-validator \\\n--validator-addr one1rka0v5rct0857f2f*6ahn0cyd89uvravr3yjw \\\n--bls-pubkeys a243b3a090063bae6aeca9215*05de1a94a033c50ab98ed98c50ab98ed984c9cf23513585e1af0cc4c9cf23513585e1af0cc \\\n--name \"My Awesome Validator\" --identity 05de1a94a0*33c50ab98ed98 --details \"All your validator notes that show up on the staking.harmony.one site\" \\\n--security-contact \"myemail@address.com\" --website \"your-website.com\" \\\n--passphrase --gas-price 100\n\n\nIf you'd like to update your info, send an edit-validator command with only the fields you would like to update.","required-flags#Required Flags":"Remember at a minimum you'll always have to include the following, along with the options you'd like to change:\n--node - Every shard uses the same node endpoint on shard 0 for updates, include it as is\nstaking edit-validator - This tells the chain we want to edit our validator\n--validator-addr - Always send your validator address here\n--passphrase - Need this to auth, enter the wallet password you setup on your validator. If you have a passphrase.txt file you can send --passphrase-file passphrase.txt instead.\n--gas-price 100 - Minimum gas needed to send the transaction","edit-validator-options#edit-validator options":"Here's all of the options you can add and customize before sending your create command.\nbls-pubkeys - Your BLS public key - Use when adding or removing (You can't go to 0 keys on your validator you must always have 1 minimum)\nname - The validator name you want listed on the validator staking page\nidentity - Your validator logo string you made earlier on keybase.io using the harmony guide.\ndetails - The details you want on the validator staking page\nsecurity-contact - Your email address for contact when validators need to make an update or change\nwebsite - Your website or social media account, use your staking page if you don't have one\nrate - Your new fee rate\nmax-total-delegation - The max $ONE that can be delegated by one single wallet\nmin-self-delegation - Must be at least 10k, you can leave this at 10k.\n\nPlease note that you are not allowed to change max-change-rate or max-rate after creation.","harmony-application-troubleshooting#Harmony Application Troubleshooting":"Harmony troubleshooting is actually quite simple. Here's how we suggest getting better messages to determine your issue:\nStop your harmony service:\n\n\nsudo service harmony stop\n\nNavigate to your ~/harmony folder ( cd ~/harmony ) and run Harmony manually. This bypasses the service and allows for better error messages.\n\n\ncd ~/harmony\n./harmony -c harmony.conf\n\nAnalyze your error message and resolve or ask in Discord Chat about the solutions!","validator-toolbox-troubleshooting#Validator Toolbox Troubleshooting":"For any issues with the toolbox, or if you'd like to re-run it after launch it the first time simply remove ~/.easynode.env from your server and rerun our script. That will trigger setup once again.You can log an issues or bugs on our github page as well.\nOur repository","common-issues-during-install#Common Issues During Install":"If you're too good, you may try to run the installer before the user data setup completes. Just give it a moment and re-run the pip3 command.","requirements-missing#Requirements missing":"If you get this error, you didn't run the pip3 command or it failed, try it again.","sudoless-root-skipped---application-install-starts-and-freezes-up#Sudoless Root Skipped - Application install starts and freezes up.":"If your download freezes on this screen you didn't setup sudoless root properly. You can enter your user password to get it to continue or re-read the Server Prep section.","no-module-found-error#No Module Found Error":"This error happens if you run too quickly on digital ocean or forget to install the validator toolbox requirements first.Error:\nModuleNotFoundError: No module named 'xxxxxxxxxx'\nThis error is easy, perform the following and then re-run start.py\ncd ~/harmony-toolbox\npip3 install -r requirements.txt","rewards#Rewards!":"Our tips on rewards for stakers and validators","rewards-as-a-delegator#Rewards as a Delegator":"Usually one of the first things to come up in chat is \"When will I get rewarded?\" and we can cover that here as well. You've hit Delegate and signed over $ONE to be used on a validator, great! Now you want to know when you'll get paid.\nYou will get rewards in real time when the next epoch starts\nYou can claim your rewards at anytime\nYou can compound your rewards once you have 1000 $ONE, the minimum to delegate","rewards-as-a-validator#Rewards as a Validator":"Validator rewards are earned along side the delegator rewards. The fee is deducted at the same time (if there is a fee on your validator) and has already been removed from your coins available to claim.\nHow much you earn depends on a lot of factors. The more ONE staked, the more one you make.\nAn entry validator with 1 key should make enough to cover their monthly server fees.","monitoring-nodes#Monitoring Nodes":"How we suggest doing basic monitoring when you first get started. Really there's not much monitor on your nodes if everything is up and working.","validator-toolbox-users#Validator Toolbox Users":"The top option is #1 in your menu to show your current server stats. If you don't use the toolbox, you can manually setup a python stats script to run by hand to see your sync status.","tools#Tools":"As we suggested earlier, see our Admin Tools section.","checking-for-bingos#Checking for BINGOs":"One command you'll want to run from time to time on both nodes to verify they are in sync is known as the \"BINGO\" command around the Harmony community. This command shows you a live view of the end of your log and prints every time it finds a block signature. You won't see this if you are not elected! To check for BINGO run the following command:\ntail -f latest/zerolog-harmony.log | grep BINGO","ssh-application---multiple-connections#SSH Application - Multiple Connections":"We open 2 connections to each node in Mobaxterm and split the screen 4 ways, here you'll see vwest & vnorth our 2 nodes.We run htop in the top window to monitor resources. We've noticed after a few days the harmony service starts consuming more CPU usage so we find it helpful to restart it from time to time. This time period varies but once we see the load average stay above 1.0 for awhile we restart the service and on the AMD systems it normally rests between 0.30 ~ 0.50.In the bottom we can use the terminal for running the Easy Node stats script, checking for BINGOs in your logs, sending edit-validator commands to add/remove keys or update information and much more. You can also vote, stake and claim rewards but I won't be covering that here as it's in the official guide.","prometheus-grafina-and-more-monitoring-software#Prometheus, Grafina and more monitoring software!":"I'm not onto the advanced monitoring software at this point with only 2 nodes. We may add this information later. It's out there if you crave deep statistics for your node.","linux-operating-system-updates#Linux Operating System Updates":"You can run Linux OS upgrades from time to time when restarting your node. If you'd like you can also reboot at that point and wait for syncing to come back online before doing the same on your 2nd node.To run linux updates without rebooting on Ubuntu 20.04 LTS run the following:\nsudo apt-get update && sudo apt-get upgrade -y","i-use-a-mac-to-connect#I use a Mac to connect!":"You can do this with 4 terminal windows. I'm sure there's applications out there for Mac that do the same but I would just use the terminal myself.","backup-node#\"Backup\" Node":"Our notes on running a 2nd server for redundancy","backup-server#Backup Server":"A backup node is no longer recommended by Harmony. Please discontinue having duplicate nodes when possible. You can still have a 2nd server ready to take over but running dual nodes will be disallowed soon.","so-youre-going-to-do-it-anyways#So you're going to do it anyways":"","backup-server-setup#Backup Server Setup":"Run another server using the same .key & .pass files as the first\nTo run a backup node complete the same setup with the following changes:\nImport your wallet instead of creating one.\nCopy your key and pass files over from your other server into your ~/harmony/.hmy/blskeys folder.","changing-shards#Changing Shards":"Some quick notes on swapping shards. This is an advanced tactic which requires some previous knowledge to pull off.","moving-shards#Moving Shards":"Here's how to move shards at an epoch change. There's some things you'll need to get ready on the front end to swap shards:\nSpin up a server on your new shard, creating new .key/.pass files (or loading ones you previously had for the target shard), and get the database in sync\nOnce synced up you are ready to add the new key from the new shard onto the blockchain via edit-validator commands\nOnce new keys are added, remove the old keys from the old shard\nLeave both servers online until the epoch election happens\nAfter the election, when the old server is done signing for the previous epoch you can shut down/retire/archive the server as per usual\nNew server will sign after the election using your newly added keys","bots#Bots":"Our notes on the telegram notification bot","telegram-vstats-bot#Telegram vStats Bot":"Made by Fortune.ONE Validator, you will want to setup this bot on telegram to notify you about issues. It's the best way to get notified of any problems.This can also give you a summary of delegations (including delegations via metamask) and your wallet balances. You can watch multiple wallets and validators with this tool.Message the bot and type /start to get started.","telegram-notification-bot#Telegram Notification Bot":"You can use the Harmony Analytics Bot to get notification on changes to wallets or to validators. Hit up the telegram bot to get started. This one is great for knowing when the next epoch is about to start.To pull up the menu send/menuTo set your favorite wallets add, mutliples separate with a comma no spaces/setaddress <one wallet address>To set your validator address\n/setfav <one validator wallet address>","robovalidator-autobidder#Robovalidator Autobidder":"Automatically bid for slotsRobovalidator has an autobidder application. You'll find the github on this page. The setup instructions are included in the readme.md file in the repository.","installation#Installation":"The autobidder can be run with the configuration as is on any Shard 0 node along side your ~/harmony folder. You will always get the best response running autobidder on a Shard 0 node.If you're not running it on a Shard 0 node (it can be run anywhere hmy is installed in ~/harmony/) you just need to set the following to True so your node will send requests to the blockchain and depending on traffic may need to increase your gas.USE_REMOTE_NODE = True","control-and-operation#Control and operation":"If you're having troubles launching autobidder and it's failing for the password, try using an empty ~/harmony/passphrase.txt file and see if you get a different result.We use VS Code with Remote SSH to manage the files, see our Admin Tools post from earlier on that application.","autobidder-support#Autobidder Support":"I don't provide support for this application, join the harmony staking telegram chat if you have questions."}},"/harmony/voting":{"title":"Voting from CLI using hmy","data":{"":"","hmy-version#hmy Version":"Make sure you've installed the most recent hmy file version with the info:\nHarmony (C) 2020. hmy, version v1-dbd9901 (runner@harmony.one 2022-08-29T08:51:21+0000)\nYou can run ./hmy version to see your version, update if you are behind before voting.","voting-string#Voting String":"Here's an example of a string that will work to vote for the HIP-28 string below:Yes vote:\n./hmy governance vote-proposal --proposal 0x98aec1cc7b92e6633c3ca0ef55bfde53de0355ef83ae738137122eb0feb5932e --key serviceharmony --choice 1 --passphrase\nNo vote:\n./hmy governance vote-proposal --proposal 0x98aec1cc7b92e6633c3ca0ef55bfde53de0355ef83ae738137122eb0feb5932e --key serviceharmony --choice 2 --passphrase\nAbstain:\n./hmy governance vote-proposal --proposal 0x98aec1cc7b92e6633c3ca0ef55bfde53de0355ef83ae738137122eb0feb5932e --key serviceharmony --choice 3 --passphrase\nNotes:\nUpdate serviceharmony to match your key name when you run ./hmy keys list and enter the password you used to import/create that wallet when prompted.","string-breakdown#String Breakdown":"--proposal The ID at end of the url of the voting page you'd like to vote on.\n--key This is your wallet name in ./hmy keys list\n--choice This is your voting choice, current theory is starts at 1 and descends the options. Can send a list if it's a multi option vote.\n--passphrase Your wallet password you set on your node.","basic-vote-type#Basic Vote Type":"Here's what the choice option translates into so far from our testing:\n--choice 1 = \"Yes\"\n--choice 2 = \"No\"\n--choice 3 = \"Abstain\""}},"/power":{"title":"Power Users","data":{"":"","cloud-init#cloud-init":"If you know if your server provider has cloud init, you're a power user. A few hosts that have cloud-init include OVH, Hetzner, Digital Ocean, Vultr and many many more.Here's our custom cloud-init that will prep any VPS for either the Harmony or Findora (or both) Validator Toolboxes!This cloud init installs all pre-requirements for both chains before you even start using your new server. To use the code below simply replace the ssh-rsa key with your id_rsa.pub key and set the username you would like to use on the server (currently serviceuser in 4 spots this example, change it if you'd like to customize).\n#cloud-config\nusers:\n- name: serviceuser\ngroups: sudo\nshell: /bin/bash\nsudo: ['ALL=(ALL) NOPASSWD:ALL']\nssh-authorized-keys:\n- ssh-rsa AAAAB3N_YOUR_PUBLIC_KEY_HERE_Fti7WjTlcTKjUkFMDDcfi5Q==\npackage_upgrade: true\nruncmd:\n- apt-get update\n- apt-get upgrade -y\n- curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n- add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable\"\n- apt install apt-transport-https ca-certificates curl software-properties-common docker-ce docker-ce-cli containerd.io bind9-dnsutils git python3-pip python3-dotenv unzip -y\n- systemctl start docker\n- systemctl enable docker\n- usermod -aG docker serviceuser\nNote: The cloud-init does take a few minutes to run after your server comes online. Wait a few minutes for this to complete or verifiy it finishes up by watching the logs with sudo tail -f /var/log/syslog to see it complete.","findora#Findora":"If you're going to be installing Findora you will need to exit your session and start a new one to join the Docker group. Run the command groups to verify your account has docker listed as a group.To pull and install the Findora Validator Toolbox, run the following command:\ncd ~/ && git clone https://github.com/FindoraNetwork/findora-toolbox.git && cd ~/findora-toolbox && pip3 install -r requirements.txt --quiet && cd ~/ && python3 ~/findora-toolbox/src/app.py\nThe installer will start up and ask if you'd like mainnet or testnet and begin installation. To re-launch the menu with the latest updates after installation completes, run:\ncd ~/findora-toolbox/ && git pull && pip3 install -r requirements.txt --quiet && cd ~/ && python3 ~/findora-toolbox/src/app.py","harmony#Harmony":"To pull and install the Harmony Validator Toolbox, run the following command:\ncd ~/ && git clone https://github.com/easy-node-pro/harmony-toolbox.git ~/harmony-toolbox && cd harmony-toolbox && pip3 install -r requirements.txt && python3 ~/harmony-toolbox/src/install.py\nThe installer will start up, ask some quesitons and install harmony. To re-launch the menu with the latest updates after installation completes, run:\ncd ~/harmony-toolbox && git pull && pip3 install -r requirements.txt --quiet && cd ~/harmony && python3 ~/harmony-toolbox/src/menu.py"}},"/shoutout":{"title":"Shoutout","data":{"":"","validator-friends-and-family#Validator friends and family!":"Big thanks to these validators for giving us suggestions and being our beta testers! Here's a list of validators we work with and have assisted in the past (or currently!):\nName\tValidator\tTwitter\tStrongMindsHold\tValidator\tTwitter\tFarmony ONE\tValidator\tTwitter\tJCR Validator\tValidator\tTwitter\tHarmony Hub\tValidator\tTwitter\tTokenNuggets\tValidator\tTwitter \tPanda Validator\tValidator \tTwitter\tStakeridoo\tValidator\tTwitter\tWubba\tValidator\tTwitter\tBe Better Validator\tValidator\tTwitter\tClimb Crypto\tValidator\tTwitter\tSm0k1nJo3\tValidator\tTwitter\n\nThis could be you!! Hit up the \"Update this page on GitHub\" link on the right sidebar and add yourself if you're in the Validator Toolbox family!"}},"/suggest":{"title":"Suggestions for our Validator Toolboxes?","data":{"":"You can view pending items and submit new to our project issues boards on GitHub.\nHarmony Validator Toolbox - Issue Board\nFindora Validator Toolbox - Issue Board","harmony-future-improvements#Harmony Future Improvements":"Here's a list of future things that could be worked on or added to harmony-toolbox if you have time!\nBLS Key management is complex and we're not sure if it can be coded in at this point without liability but we'll be proposing this as a project soon!\nCreate, Add, Remove, although we'll have to add a lot of annoying messages about backing them up to your home machine.\nWeb management interface that runs locally and only you can access to get stats and manage your server.\nHelp menu when using -h","findora-future-improvements#Findora Future Improvements":"Here's a list of future things that could be worked on or added to harmony-toolbox if you have time!\nGot any suggestions?"}},"/support":{"title":"Support Us!","data":{"":"","sponsor-easy-node#Sponsor Easy Node!":"Support us by becoming a sponsor with a monthly subscription! All of our tools are free but if you'd like to give back to us for helping out checkout our Subscriber Dashboard here.We've had eight lovely sponsors, will you be the next?","stake-with-easynodepro#Stake with EasyNode.PRO":"Check out our validators on our official website.","crypto-tips#Crypto Tips":"Tip any of our validator wallets!\nNetwork:\tAddress:\tNotes:\tEVM\t0x3cb9F2120Ad5F5E1d58088b261053B62CaC0cdE8\tWorks with ONE, FRA, ETH, AVAX, MATIC, and more!\tONE\tone18julyys26h67r4vq3zexzpfmvt9vpn0g75phmu\tHarmony one1 Wallet\tFRA UTXO\tfra1gnd02frzfaqys947e4kacekm0utgcq0k6frzcjft05078kjkj7yq06jrj2\tFindora fra1 Wallet"}},"/updates":{"title":"Updates","data":{"":"","updates-log#Updates Log":"A running log of updates to our guides.","2023#2023":"Updates in 2023:","12423---added-api-docs#1/24/23 - Added /api-docs":"We've launched our api endpoint website and added the docs sub for future information if required. Check it out today at .","2022#2022":"Updates in 2022:","121622---findora-validator-toolbox-guide-site-upgrade#12/16/22 - Findora Validator Toolbox, Guide Site Upgrade!":"We released the Findora Validator Toolbox on 12/9/22! Documentation site upgraded to react 18/next.js current!","52622---findora-fra-validator-online#5/26/22 - Findora FRA Validator Online!":"Our new Findora $FRA Validator is now online! Stake with us and earn 51% APY on Findora!We, of course, setup Harmony ONE with it's own section now along side our brand new Findora Validator Guides!","5522---one-site-to-rule-them-all#5/5/22 - One site to rule them all":"One guide to guide them all - Combined both guides into one - Companion & Toolbox Guide United!","5422---moved-to-a-new-platform-and-host-enjoy#5/4/22 - Moved to a new platform and host! Enjoy!":"Moved platform, minor updates for now","2021#2021":"Updates in 2021:","91821---prepping-validator-toolbox#9/18/21 - Prepping validator-toolbox":"Re-arranged some items and broke it down into smaller information. Working on pre-loading the version that will go live with the validator toolbox.","72421---easynodepro#7/24/21 - EasyNode.PRO":"We are now EasyNode.PRO\nWe'll have a toolset for validators coming in the next few weeks, stay tuned!","61721---raspberry-pi#6/17/21 - Raspberry Pi":"Setup links to the Raspberry Pi Node Setup guide that was added to the official site after being created by Stakeridoo!","6221---statssh-scripts#6/2/21 - stats.sh scripts":"Upgraded & supercharged the scripts with the help of Stakeridoo's recent github release for raspberry pi.","51621---vultr#5/16/21 - Vultr":"Added Vultr as a Cloud Provider in notes with the testing of a 3rd node on their services.","5721---cloud-requirements--managing-nodes#5/7/21 - Cloud Requirements & Managing Nodes":"Updated cloud requirements with upgrades to the official guide completed.\nBuilt the Validator Toolbox\nCreated Monitoring Nodes page for new validators looking for monitoring tips","5521#5/5/21":"Big update today, rearranged most of the guide intro to help people deciding if this is the right choice for them along with delving more into server costs and locations after a lot of new validators found out the big 3 cloud providers are quite pricey for data transfer.\nAdded a link to Ubuntu 20.04 LTS for Windows to help people get into Linux as that's what your node will run.","41221---stats-script#4/12/21 - Stats Script":"Added Harmony Version Printout to bottom of the Stats Script.","492021---new-branding-and-site#4/9/2021 - New branding and site!":"New URL Change\nFixed intro section for Advanced Tips","432021---shard-selection#4/3/2021 - Shard Selection":"With the recent issues on Shard 0 we updated the guide and encourage users to create keys on another shard instead of 0. Any of the others are fine, take your pick."}},"/findora/toolbox":{"title":"Findora Toolbox Setup","data":{"":"This guide is for installing the Validator Toolbox and then a Findora Validator Node onto a brand new validator server. After you finish this guide you'll use our Post Install section to stake FRA and create your validator.Here's a short video of us installing and using the toolbox!","existing-validators#Existing Validators":"Toolbox will install on existing validators as well. Since you already have a user account and docker, you're good to skip ahead and run the install string to setup the management menu. After that use the normal launch command to check for updates and run the menu each time.","github-repository#Github Repository":"The Findora Validator Toolbox repository has  🌟 on GitHub. If you enjoy our Validator Toolbox software can you head to our page and give us a 🌟 today? Thank you!","code-stats#Code Stats":"","pre-install-tasks#Pre-Install Tasks":"","server-selection#Server Selection":"Grab a server. We suggest using a budget host with enough storage. Currently used providers (depending on location) are ovh.com / ovh.us, server4u, contabo. Hetzner is no longer recommended for a host as crypto is against their policy but does work great for learning and testing a Findora server.The Hardware Requirements:\nRecommended: 16GB RAM, 4 Core CPU, 300GB NVMe Hard Disk","server-prep#Server Prep":"","setup-a-user-account#Setup A User Account":"See our admin tools page on setting up a user account & using ssh keys for passwordless secure login.Once you're logged into your user account, you're ready to move on.","firewall-ports#Firewall Ports":"We covered setting up your firewall for Findora right here. If you don't have a web firewall now is the time to configure UFW.","docker-installation#Docker Installation":"At this point you need to install docker using these instructions if you didn't already do so.","run-installer#Run Installer":"Once you've logged back in and your user is in the docker group, run the folloing code to install the toolbox and begin installation on either mainnet or testnet. Our menu will launch and ask you a few simple questions to get you fully loaded and online:\n\n\ncd ~/ && sudo apt install python3-pip -y && git clone https://github.com/FindoraNetwork/findora-toolbox.git && cd findora-toolbox && pip3 install -r requirements.txt --quiet && cd ~/ && python3 ~/findora-toolbox/src/app.py --mainnet\n\n\n\ncd ~/ && sudo apt install python3-pip -y && git clone https://github.com/FindoraNetwork/findora-toolbox.git && cd findora-toolbox && pip3 install -r requirements.txt --quiet && cd ~/ && python3 ~/findora-toolbox/src/app.py --testnet\n\n\nThe installer will pull the installation script and get everything setup. At the end of the installer you'll have a fully working validator syncing up to the blockchain on a brand new tmp.gen.keypair and priv_validator_key.json file. These are usable as wallets but are also disposable still at this point. You can test out all the functions of a Findora server now as long as you don't run the staking and creation commands.","after-installation#After Installation":"At this point you'll have a system that begins syncing automatically on the blockchain after the database download and unpacking completes. Wait for your sync_status to equal false before creating your validator or migrating to a new system.","relaunch-toolbox#Relaunch Toolbox":"To re-start the toolbox with updates, run the following code:\ncd ~/findora-toolbox/ && git pull && pip3 install -r requirements.txt --quiet && cd ~/ && python3 ~/findora-toolbox/src/app.py","post-installation#Post Installation":"If you're just installing your validator for the first time you still need to fund your wallet, stake your FRA, start your validator and backup your private key files. Head over to our post install section for those commands!","toolbox-pro-tips#Toolbox Pro Tips":"If you're an experienced Validator you can find more info on what the toolbox is doing for you right here."}},"/":{"title":"Guides","data":{"":"","blockchain-guides#Blockchain Guides":"","harmony-one#Harmony ONE":"New Validators - Installation by hand to learn all the components of a Harmony $ONE Validator node.\nExperienced Validators - Installation by Easy Node's Harmony Validator Toolbox - Our installer & management menu for Harmony ONE Validators!\nHarmony ONE Staking Guide","findora-fra#Findora FRA":"New Validators - Start Here to learn about being a Findora Validator.\nExperienced Validators - Installation by Easy Node's Findora Validator Toolbox - Our installer & management menu for Findora FRA Validators!","findora-staking-guide#Findora Staking Guide":"Currently the easiest way to obtain Findora is via KuCoin. Here's the steps you'll need to complete to get Findora staked:\nBuy on KuCoin or BitMart\nSend to your EVM MetaMask 0x address\nSetup Findora EVM Network in MetaMask\nInstall Findora native wallet on same PC\nBridge from MM to Findora\nStake via the Findora native wallet","github-repository#Github Repository":"This guides repository has  🌟 on GitHub. If you enjoy our guides would you head to our page and give us a 🌟 today? Thank you!","validator-support-communities#Validator Support Communities":"There is no setup help or support officially provided to validators by the blockchains you are your own help desk. It's always best to fully learn your system before going live on a blockchain. If you do get stuck you can always ask for help in:\nHarmony's Official Discord Server is the best spot for all things Harmony first for fastest response.\nHarmony Official Mainnet Staking Telegram Channel is another great spot for Harmony questions.\nFindora Main Telegram Chat - Findora Validator Support Telegram Channel is the best spot for incoming Findora Validators to as questions. Ask for an invite in the main.\nEasyNode.PRO Discord - We do field questions in our Discord server but we may take our sweet time to respond. Other users may provide assistance if they're available so post in the proper channels!","subscribe-to-easy-node#Subscribe to Easy Node":"Want to help us out for helping you out? Our subscriptons start as low as $3.75 a month!Have a lot of questions? Become an 'Easy Technical Supporter' and unlock a subscribers only priority support chat!Get more info here:\nEasy Node Discord Subscriptions"}},"/harmony/toolbox":{"title":"Harmony Toolbox Intro","data":{"":"The Harmony Validator Toolbox is designed to help Harmony validators install the Easy Node Validator Toolbox and get online asap. This is not for beginner Harmony Validators.","github-repository#Github Repository":"Harmony Validator Toolbox repository has  🌟 on GitHub.If you enjoy our validator toolbox software can you head to our page and give us a 🌟 today? Thank you!","code-stats#Code Stats":"","server-prep#Server Prep":"We covered most of these things in the admins tools section but here's what you need:\nLinux server running Ubuntu 20.04/22.04 LTS\nA regular user acocunt with root access\n\nThat's it for the requirements, you're ready to connect to your new server and install the Harmony Validator Server Node software.","toolbox-installation-guide#Toolbox Installation Guide":"Now that you're logged in and ready to go as your regular user account, here's the steps to installation! The harmony-toolbox application can be installed on existing nodes to utilize the management menu along with running on brand new servers to setup the Harmony Validator software.","installation-video#Installation Video":"We put together a video going over the toolbox, you can catch that here!","ubuntu-dependencies#Ubuntu Dependencies":"Install Ubuntu dependencies, clone our Github repository, and install Python Requirements with the following command:\nsudo apt-get install dnsutils git python3-pip python3-dotenv unzip tmux -y && cd ~/ && git clone https://github.com/easy-node-pro/harmony-toolbox.git && cd ~/harmony-toolbox && pip3 install -r requirements.txt","launch-validator-toolbox#Launch Validator Toolbox":"If this is the first time launching the toolbox you'll get prompted to answer some questions before we install Harmony on the new server! To start installation run:\npython3 ~/harmony-toolbox/src/install.py","the-setup-menus#The Setup Menus":"Here's more information about each setup menu along the way!","loading-screen#Loading Screen":"","first-run-detected#First run detected!":"Start Installer Application\nRun this option if you are loading a brand new server for the very first time.Start Validator Toolbox Menu\nRun this option if you are loading the toolbox on a server that is already running as a harmony validator node.","shard-choice#Shard Choice":"Simply pick the shard this node will run on. It's a personal preference, although we suggest looking at the smart stake site and determining which shard of 1-3 has the lowest # of keys and using that shard.","node-type#Node Type":"Standard Signing Node\nKnown to most as a \"Harmony Validator\" this option loads a wallet and saves your passphrase in ~/harmony/passphrase.txtFull Node Non Validating Dev/RPC\nChoose this option to load a system that doesn't use a wallet. Mostly used by developers and RPC services","testnet-or-mainnet#Testnet or Mainnet":"MainnetThe main Harmony ONE Blockchain for normal operations.TestnetThe Harmony ONE Testnet, use with test tokens. You can visit our discord community if you need test network coins, we have plenty.","express-install-or-manual-choices#Express Install or Manual Choices":"Express InstallAssumes you want the kitchen sink for your validator.Manual Approval\nThis lets you choose y/n on every option along the way.","password-file-regular-signing-validator-nodes-only#Password File (Regular Signing Validator Nodes Only)":"Enter a password for your wallet on this node. It's unique to this server","recover-wallet-regular-signing-validator-nodes-only#Recover Wallet (Regular Signing Validator Nodes Only)":"Add your mnemonic phrase here directly into the hmy file interface. We do not store or save this information.New Users - If you do not have a wallet yet, press ctrl+c to skip wallet recovery and after installation you can manually create or import a wallet of your choosing.","clone-shards#Clone Shards":"You will now start cloning your shards. If you choose shard 1-3 that shard will download before shard 0. You can press ctrl+c to cancel downloading of any shard to move past that download.","install-completed#Install completed!":"As mentioned earlier, if you do not have sudoless root access, you will be prompted for a password, which is often several lines up from the bottom of the screen and sometimes hard to see.","first-time-validator-extra-steps#First Time Validator Extra Steps":"The next 3 sections need to be completed after running the toolbox installer but before running the management menu application for the first time as a brand new validator only. Since you're an experienced validator you should have already completed everything in this guide. I've left this for new people who may be attempting to \"jump the line\".","create-a-wallet#Create A Wallet":"See our notes on setting up a wallet here if you made it this far without one.","bls-keys#BLS Keys":"See our notes on creating BLS Keys here but if you are this far you should already have these.\nBackup (transfer/save) your .key & .pass files onto your home system for re-use in the future\nNew keys can be created at anytime and added to your validator for use after the next election\nBLSKeys are hard coded to the shard you create them for, this cannot be changed","creating-a-validator#Creating a Validator":"Here's the example command given in the official guide below. I'll suggest some updates and give an example command in the following steps.\n\n\n./hmy --node=\"https://api.s0.t.hmny.io\" staking create-validator \\\n--validator-addr [ONE ADDRESS] --amount 10000 \\\n--bls-pubkeys [BLS PUBLIC KEY1],[BLS PUBLIC KEY2] \\\n--name \"[NAME]\" --identity \"[IDENTITY]\" --details \"DETAILS\" \\\n--security-contact \"CONTACT\" --website \"YOUR-WEBSITE.COM\" \\\n--max-change-rate 0.1 --max-rate 0.1 --rate 0.1 \\\n--max-total-delegation 100000000 --min-self-delegation 10000 --passphrase --gas-price 100\n\n\n\n./hmy --node=\"https://api.s0.b.hmny.io\" staking create-validator \\\n--validator-addr [ONE ADDRESS] --amount 10000 \\\n--bls-pubkeys [BLS PUBLIC KEY1],[BLS PUBLIC KEY2] \\\n--name \"[NAME]\" --identity \"[IDENTITY]\" --details \"DETAILS\" \\\n--security-contact \"CONTACT\" --website \"YOUR-WEBSITE.COM\" \\\n--max-change-rate 0.1 --max-rate 0.1 --rate 0.1 \\\n--max-total-delegation 100000000 --min-self-delegation 10000 --passphrase --gas-price 100\n\n\nCopy the entire command. Extra white spaces in the command could cause errors.Name, identity, details, security-contact and website need to be put in double quotes if there are more than one word separated by space (example --name \"John the validator\").","post-install-suggestions#Post Install Suggestions":"You want to setup your logo for the validator. Here's the Adding A Validator Logo section of the official guide that will get you set up with an identity string. We suggest including the identity string in your create-validator command.With that in mind, the only extra item we suggest to include is the --identity information. Here's an example with a fake address and information as an example.\n\n\n./hmy --node=\"https://api.s0.t.hmny.io\" staking create-validator \\\n--validator-addr one1rka0v5rct0857f2f*6ahn0cyd89uvravr3yjw --amount 10000 \\\n--bls-pubkeys a243b3a090063bae6aeca9215*05de1a94a033c50ab98ed98c50ab98ed984c9cf23513585e1af0cc4c9cf23513585e1af0cc \\\n--name \"My Awesome Validator\" --identity 05de1a94a0*33c50ab98ed98 --details \"All your validator notes that show up on the staking.harmony.one site\" \\\n--security-contact \"myemail@address.com\" --website \"your-website.com\" \\\n--max-change-rate 0.1 --max-rate 0.1 --rate 0.1 \\\n--max-total-delegation 100000000 --min-self-delegation 10000 --passphrase --gas-price 100\n\n\n\n./hmy --node=\"https://api.s0.b.hmny.io\" staking create-validator \\\n--validator-addr one1rka0v5rct0857f2f*6ahn0cyd89uvravr3yjw --amount 10000 \\\n--bls-pubkeys a243b3a090063bae6aeca9215*05de1a94a033c50ab98ed98c50ab98ed984c9cf23513585e1af0cc4c9cf23513585e1af0cc \\\n--name \"My Awesome Validator\" --identity 05de1a94a0*33c50ab98ed98 --details \"All your validator notes that show up on the staking.harmony.one site\" \\\n--security-contact \"myemail@address.com\" --website \"your-website.com\" \\\n--max-change-rate 0.1 --max-rate 0.1 --rate 0.1 \\\n--max-total-delegation 100000000 --min-self-delegation 10000 --passphrase --gas-price 100","all-of-the-options-explained#All of the options explained":"Decide on your max-change-rate and max-rate before sending your command. These cannot be modified after you have sent your create validator command, like ever!\nHere's all of the options you will customize before sending your create command.\nvalidator-addr - Your Validator wallet with 10001+ coins available to delegate at least 10k.\namount - Must be at least 10k. Have extra one available for fees. 1 ONE that can be delegated by one single wallet\nmin-self-delegation - Must be at least 10k, you can leave this at 10k.","commands#Commands":"Now it's installed, how do we start it up?","launch-toolbox-menu#Launch Toolbox Menu":"To launch the Management Menu we suggest the following string to check for updates and launch each time you'd like to run the menu:\ncd ~/harmony-toolbox && git pull && pip3 install -r requirements.txt --quiet && cd ~/harmony && python3 ~/harmony-toolbox/src/menu.py","get-stats#Get Stats":"If you'd like to get only your stats without launching the full toolbox, run the following command:\npython3 ~/harmony-toolbox/src/multi_stats.py"}},"/harmony":{"title":"Harmony Validator Guides","data":{"":"","what-is-a-harmony-validator#What is a Harmony Validator?":"You're probably already familiar at this point but Harmony Validators verify each block produced on chain with all of the current transactions. Beyond that there's two ways that people in the Harmony Ecosystem refer to a \"Harmony Validator\" item:\nValidator Wallet - A wallet is simply upgraded to become a validator wallet. On the staking portal you see the validator wallet addresses that were registered at creation time.\nValidator Server Node - The platform you use to create a wallet, create a validator, then later manage your \"Harmony Validator Server Node\" aka the computer running harmony using your wallet and your bls keys.","new-validator-guide#New Validator Guide":"This section is our original Companion Guide that we created when we first set up our validators to help regular investors become validators.In the New Validators Companion section of this guide we focus on teaching prospective validators how to prepare, install/run the software, and what to do afterwards. While using our guide along side the Official Harmony $ONE Validator guide. You'll want all of this knowledge to help you come election time as only you support yourself as a validator.This site was created to help anyone become a Harmony Validator and also to help existing Harmony Validator's manage their nodes better and more securly. This guide contains the following main sections:\nNew Validators will want to go through this guide to setup their first server. This will give you the base you need to succeed. Our guide matches up with the official guide to tell you page by page what info to look for.\nExperienced Validators will want this guide for installing Harmony on a new server via the harmony-toolbox application.\nPost Install is where both guides converge to cover post installation, notes are added for items that can be run via the validator toolbox management menu and we also explain how to get the information manually or with a script.","validator-toolbox-guide#Validator Toolbox Guide":"This section is our Validator Toolbox Guide and has you covered to help you out with our Installer & Manage Menu application.\nNew Validators can take a look at our installer, but please, learn how to do it by hand first!","the-easy-node-way#The Easy Node Way":"When using our guides or tips you can always assume the following things that aren't really specified in the Harmony Documents. We call this \"The Easy Node Way\" which helps with organization and security:\nSetup a user account to run harmony\nDon't use root or harmony as account names!!!\nWe suggest your username as something like serviceharmony\nUse a folder in your user home directory to store harmony\nWe suggest /home/serviceharmony/harmony","validator-support-communities#Validator Support Communities":"There is no setup help or support officially provided to validators by the blockchains you are your own help desk. It's always best to fully learn your system before going live on a blockchain. If you do get stuck you can always ask for help in:\nHarmony's Official Discord Server is the best spot for all things Harmony first for fastest response.\nHarmony Official Mainnet Staking Telegram Channel is another great spot for Harmony questions.\nEasyNode.PRO Discord - We do field questions in our Discord server but we may take our sweet time to respond. Other users may provide assistance if they're available so post in the proper channels!","subscribe-to-easy-node#Subscribe to Easy Node":"Want to help us out for helping you out? Our subscriptons start as low as $3.75 a month!Have a lot of questions? Become an 'Easy Technical Supporter' and unlock a subscribers only priority support chat!Get more info here:\nEasy Node Discord Subscriptions"}}}